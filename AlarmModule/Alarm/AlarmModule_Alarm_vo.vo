
// Verilog netlist produced by program backanno, Version Radiant Software (64-bit) 3.0.0.24.1

// backanno -o AlarmModule_Alarm_vo.vo -sp High-Performance_1.2V -w -neg -gui AlarmModule_Alarm.udb 
// Netlist created on Thu Nov 18 23:41:03 2021
// Netlist written on Thu Nov 18 23:41:08 2021
// Design is for device iCE40UP5K
// Design is for package SG48
// Design is for performance grade High-Performance_1.2V

`timescale 1 ns / 1 ps

module MainModule ( STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT, SENSOR1_IN, 
                    SENSOR2_IN, KB_IN, KB_RECV, RESET_IN );
  input  SENSOR1_IN, SENSOR2_IN;
  input  [1:0] KB_IN;
  input  KB_RECV, RESET_IN;
  output STATUS_SEND, STATUS_OUT, SIREN_OUT, SERCLK_OUT;
  wire   \mainTimer.n3313 , \mainTimer.n1397 , \mainTimer.clkCont[17] , 
         \mainTimer.clkCont_17__N_52[17] , \mainTimer.n3310 , 
         \mainTimer.clkCont[16] , \mainTimer.n1395 , \mainTimer.clkCont[15] , 
         \mainTimer.clkCont_17__N_52[15] , \mainTimer.clkCont_17__N_52[16] , 
         \mainTimer.n3307 , \mainTimer.clkCont[14] , \mainTimer.n1393 , 
         \mainTimer.clkCont[13] , \mainTimer.clkCont_17__N_52[13] , 
         \mainTimer.clkCont_17__N_52[14] , \mainTimer.n3304 , 
         \mainTimer.clkCont[12] , \mainTimer.n1391 , \mainTimer.clkCont[11] , 
         \mainTimer.clkCont_17__N_52[11] , \mainTimer.clkCont_17__N_52[12] , 
         \mainTimer.n3301 , \mainTimer.clkCont[10] , \mainTimer.n1389 , 
         \mainTimer.clkCont[9] , \mainTimer.clkCont_17__N_52[9] , 
         \mainTimer.clkCont_17__N_52[10] , \mainTimer.n3298 , 
         \mainTimer.clkCont[8] , \mainTimer.n1387 , \mainTimer.clkCont[7] , 
         \mainTimer.clkCont_17__N_52[7] , \mainTimer.clkCont_17__N_52[8] , 
         \mainTimer.n3295 , \mainTimer.clkCont[6] , \mainTimer.n1385 , 
         \mainTimer.clkCont[5] , \mainTimer.clkCont_17__N_52[5] , 
         \mainTimer.clkCont_17__N_52[6] , \mainTimer.n3292 , 
         \mainTimer.clkCont[4] , \mainTimer.n1383 , \mainTimer.clkCont[3] , 
         \mainTimer.clkCont_17__N_52[3] , \mainTimer.clkCont_17__N_52[4] , 
         \mainTimer.n3289 , \mainTimer.clkCont[2] , \mainTimer.n1381 , 
         \mainTimer.clkCont[1] , \mainTimer.clkCont_17__N_52[1] , 
         \mainTimer.clkCont_17__N_52[2] , \mainTimer.n3202 , VCC_net, 
         \mainTimer.clkCont[0] , \mainTimer.clkCont_17__N_52[0] , 
         \STATE_OUT.n3169 , \j[12] , \STATE_OUT.n1358 , \j[11] , 
         \waiting_N_152[11] , \waiting_N_152[12] , \STATE_OUT.n1360 , 
         \STATE_OUT.n3166 , \j[10] , \STATE_OUT.n1356 , \j[9] , 
         \waiting_N_152[9] , \waiting_N_152[10] , \STATE_OUT.n3163 , \j[8] , 
         \STATE_OUT.n1354 , \j[7] , \waiting_N_152[7] , \waiting_N_152[8] , 
         \STATE_OUT.n3175 , \j[16] , \STATE_OUT.n1362 , \j[15] , 
         \waiting_N_152[15] , \waiting_N_152[16] , \STATE_OUT.n1364 , 
         \STATE_OUT.n3196 , \j[30] , \STATE_OUT.n1376 , \j[29] , 
         \waiting_N_152[29] , \waiting_N_152[30] , \STATE_OUT.n1378 , 
         \STATE_OUT.n3160 , \j[6] , \STATE_OUT.n1352 , \j[5] , 
         \waiting_N_152[5] , \waiting_N_152[6] , \STATE_OUT.n3157 , \j[4] , 
         \STATE_OUT.n1350 , \j[3] , \waiting_N_152[3] , \waiting_N_152[4] , 
         \STATE_OUT.waiting_N_152[1] , \STATE_OUT.n3154 , \j[2] , 
         \STATE_OUT.n1348 , \STATE_OUT.j[1]_2 , \STATE_OUT.waiting_N_147 , 
         \STATE_OUT.n193 , SERCLK_OUT_c, \waiting_N_152[2] , \STATE_OUT.n3172 , 
         \j[14] , \j[13] , \waiting_N_152[13] , \waiting_N_152[14] , 
         \STATE_OUT.waiting_N_152[0] , \STATE_OUT.n3151 , \STATE_OUT.j[0]_2 , 
         \STATE_OUT.n3187 , \j[24] , \STATE_OUT.n1370 , \j[23] , 
         \waiting_N_152[23] , \waiting_N_152[24] , \STATE_OUT.n1372 , 
         \STATE_OUT.n3184 , \j[22] , \STATE_OUT.n1368 , \j[21] , 
         \waiting_N_152[21] , \waiting_N_152[22] , \STATE_OUT.n3181 , \j[20] , 
         \STATE_OUT.n1366 , \j[19] , \waiting_N_152[19] , \waiting_N_152[20] , 
         \STATE_OUT.n3178 , \j[18] , \j[17] , \waiting_N_152[17] , 
         \waiting_N_152[18] , \STATE_OUT.n3199 , \j[31] , \waiting_N_152[31] , 
         \STATE_OUT.n3193 , \j[28] , \STATE_OUT.n1374 , \j[27] , 
         \waiting_N_152[27] , \waiting_N_152[28] , \STATE_OUT.n3190 , \j[26] , 
         \j[25] , \waiting_N_152[25] , \waiting_N_152[26] , 
         \STATE_OUT.serial.n3256 , \STATE_OUT.serial.j[16] , 
         \STATE_OUT.serial.n1329 , \STATE_OUT.serial.j[15] , n151, n150, 
         \STATE_OUT.serial.n1331 , \STATE_OUT.serial.n3241 , 
         \STATE_OUT.serial.j[6] , \STATE_OUT.serial.n1319 , 
         \STATE_OUT.serial.j[5] , n161, n160, \STATE_OUT.serial.n1321 , 
         \STATE_OUT.serial.n3247 , \STATE_OUT.serial.j[10] , 
         \STATE_OUT.serial.n1323 , \STATE_OUT.serial.j[9] , n157, n156, 
         \STATE_OUT.serial.n1325 , \STATE_OUT.serial.n3238 , 
         \STATE_OUT.serial.j[4] , \STATE_OUT.serial.n1317 , 
         \STATE_OUT.serial.j[3] , n163, n162, \STATE_OUT.serial.n3280 , 
         \STATE_OUT.serial.n1345 , \STATE_OUT.serial.j[31] , n135, 
         \STATE_OUT.serial.n3277 , \STATE_OUT.serial.j[30] , 
         \STATE_OUT.serial.n1343 , \STATE_OUT.serial.j[29] , n137, n136, 
         \STATE_OUT.serial.n167[1] , \STATE_OUT.serial.n3235 , 
         \STATE_OUT.serial.j[2] , \STATE_OUT.serial.n1315 , 
         \STATE_OUT.serial.j[1] , n174, n164, \STATE_OUT.serial.n3274 , 
         \STATE_OUT.serial.j[28] , \STATE_OUT.serial.n1341 , 
         \STATE_OUT.serial.j[27] , n139, n138, \STATE_OUT.serial.n3253 , 
         \STATE_OUT.serial.j[14] , \STATE_OUT.serial.n1327 , 
         \STATE_OUT.serial.j[13] , n153, n152, \STATE_OUT.serial.n3244 , 
         \STATE_OUT.serial.j[8] , \STATE_OUT.serial.j[7] , n159, n158, 
         \STATE_OUT.serial.n3271 , \STATE_OUT.serial.j[26] , 
         \STATE_OUT.serial.n1339 , \STATE_OUT.serial.j[25] , n141, n140, 
         \STATE_OUT.serial.n3268 , \STATE_OUT.serial.j[24] , 
         \STATE_OUT.serial.n1337 , \STATE_OUT.serial.j[23] , n143, n142, 
         \STATE_OUT.serial.n3250 , \STATE_OUT.serial.j[12] , 
         \STATE_OUT.serial.j[11] , n155, n154, \STATE_OUT.serial.n3265 , 
         \STATE_OUT.serial.j[22] , \STATE_OUT.serial.n1335 , 
         \STATE_OUT.serial.j[21] , n145, n144, \STATE_OUT.serial.n3262 , 
         \STATE_OUT.serial.j[20] , \STATE_OUT.serial.n1333 , 
         \STATE_OUT.serial.j[19] , n147, n146, \STATE_OUT.serial.n167[0] , 
         \STATE_OUT.serial.n3232 , \STATE_OUT.serial.j[0] , 
         \STATE_OUT.serial.n3259 , \STATE_OUT.serial.j[18] , 
         \STATE_OUT.serial.j[17] , n149, n148, \Snext[0]$n1 , \Snext[1]$n0 , 
         \Snext[0] , \Snext_1__N_1[0] , Snext_1__N_3, \Snext[1] , 
         \Snext_1__N_1[1] , RESET_IN_c, \Sreg[1] , \Sreg[0] , 
         \keyboard.nextState[0]$n3 , \keyboard.nextState[1]$n2 , 
         \keyboard.nextState[0] , \keyboard.counter[1] , \keyboard.n397 , 
         \keyboard.counter[0] , \keyboard.n6 , \state[0] , \state[1] , 
         \keyboard.n13[1] , \keyboard.n1 , KB_RECV_c, 
         \mainTimer.clkCont_17__N_31[16] , \mainTimer.clkCont_17__N_31[17] , 
         TIME_OUT, \mainTimer.clkCont_17__N_49 , 
         \mainTimer.clkCont_17__N_31[14] , \mainTimer.clkCont_17__N_31[15] , 
         \mainTimer.clkCont_17__N_31[12] , \mainTimer.clkCont_17__N_31[13] , 
         \mainTimer.clkCont_17__N_31[10] , \mainTimer.clkCont_17__N_31[11] , 
         \mainTimer.clkCont_17__N_31[8] , \mainTimer.clkCont_17__N_31[9] , 
         \mainTimer.clkCont_17__N_31[6] , \mainTimer.clkCont_17__N_31[7] , 
         \mainTimer.clkCont_17__N_31[4] , \mainTimer.clkCont_17__N_31[5] , 
         \mainTimer.clkCont_17__N_31[2] , \mainTimer.clkCont_17__N_31[3] , 
         \mainTimer.clkCont_17__N_31[0] , \mainTimer.clkCont_17__N_31[1] , 
         n512, n510, waiting_N_151, waiting, n506, n508, n514, n516, n522, 
         n518, n555, n520, \STATE_OUT.n21[1] , \STATE_OUT.n21[0] , 
         \STATE_OUT.cont[1] , \STATE_OUT.cont[0] , n559, n557, n563, n561, 
         n567, n565, n571, n569, n593, n595, n589, n591, n585, n587, n581, 
         n583, n577, n579, n573, n575, \STATE_OUT.n21[3] , \STATE_OUT.n21[2] , 
         \STATE_OUT.cont[3] , \STATE_OUT.cont[2] , 
         \Sreg[1].sig_000.FeedThruLUT , \STATE_OUT.n173 , 
         \STATE_OUT.serial.n503 , \STATE_OUT.serial.temp_data_out[3]_2 , n534, 
         n535, \SENSOR2_IN_c.sig_001.FeedThruLUT , SENSOR2_IN_c, 
         \STATE_OUT.serial.temp_data_out[0]_2 , 
         \SENSOR1_IN_c.sig_002.FeedThruLUT , SENSOR1_IN_c, 
         \STATE_OUT.serial.temp_data_out[1]_2 , n552, n553, n550, n551, n548, 
         n549, n546, n547, n544, n545, n542, n543, n532, n533, n530, n531, 
         n528, n529, n526, n527, n524, n525, init, n540, n541, n538, n539, 
         n536, n537, \keyboard.nextState[1] , \Snext_1__N_12[0] , 
         \KEY_STATUS[1] , n2700, n2307, \PREV_KEY[0] , \PREV_KEY[1] , n2314, 
         TIMER_EN_N_22, TIMER_EN_N_26, n3, n1, \actualKey[0][1] , n2122, 
         \actualKey[2][1] , \keyboard.actualKey[0][0] , 
         \keyboard.actualKey[3][0] , \keyboard.actualKey[1][0] , 
         \keyboard.actualKey[2][0] , n12, KB_IN_c_1, \keyboard.n1766 , 
         \actualKey[3][1] , \actualKey[1][1] , \keyboard.n1049 , 
         PREV_KEY_1__N_7, n1924, n2316, TIMER_EN, TIMER_EN_N_17, n393, n987, 
         KB_IN_c_0, \PREV_KEY_1__N_5[1] , SIREN_OUT_c, n1926, n492, 
         \mainTimer.n2882 , \mainTimer.n24 , \mainTimer.n20 , \keyboard.n1763 , 
         \keyboard.n1765 , \mainTimer.n2118 , \mainTimer.n2108 , 
         \mainTimer.n18 , \mainTimer.n21 , \STATE_OUT.n32 , \STATE_OUT.n47 , 
         \STATE_OUT.n46 , \STATE_OUT.n52 , \STATE_OUT.n48 , \STATE_OUT.n50 , 
         \STATE_OUT.n49 , \STATE_OUT.n56 , \STATE_OUT.n30 , \STATE_OUT.n51 , 
         \STATE_OUT.serial.n49 , \STATE_OUT.serial.n50 , 
         \STATE_OUT.serial.n48 , \STATE_OUT.serial.n47 , 
         \STATE_OUT.serial.n56 , \STATE_OUT.serial.n32 , 
         \STATE_OUT.serial.n46 , \STATE_OUT.serial.n52 , 
         \STATE_OUT.serial.n44 , \STATE_OUT.serial.n55 , 
         \STATE_OUT.serial.status_out_N_264 , \STATE_OUT.serial.n2694 , 
         \temp_data_out[2] , STATUS_OUT_c, \STATE_OUT.n2320 , 
         \STATE_OUT.n1790 , \STATE_OUT.waiting_N_147$n4 , n614, STATUS_SEND_c;

  mainTimer_SLICE_0 \mainTimer.SLICE_0 ( .D1(\mainTimer.n3313 ), 
    .D0(\mainTimer.n1397 ), .B0(\mainTimer.clkCont[17] ), 
    .CIN0(\mainTimer.n1397 ), .CIN1(\mainTimer.n3313 ), 
    .F0(\mainTimer.clkCont_17__N_52[17] ), .COUT0(\mainTimer.n3313 ));
  mainTimer_SLICE_1 \mainTimer.SLICE_1 ( .D1(\mainTimer.n3310 ), 
    .B1(\mainTimer.clkCont[16] ), .D0(\mainTimer.n1395 ), 
    .B0(\mainTimer.clkCont[15] ), .CIN0(\mainTimer.n1395 ), 
    .CIN1(\mainTimer.n3310 ), .F0(\mainTimer.clkCont_17__N_52[15] ), 
    .F1(\mainTimer.clkCont_17__N_52[16] ), .COUT1(\mainTimer.n1397 ), 
    .COUT0(\mainTimer.n3310 ));
  mainTimer_SLICE_2 \mainTimer.SLICE_2 ( .D1(\mainTimer.n3307 ), 
    .B1(\mainTimer.clkCont[14] ), .D0(\mainTimer.n1393 ), 
    .B0(\mainTimer.clkCont[13] ), .CIN0(\mainTimer.n1393 ), 
    .CIN1(\mainTimer.n3307 ), .F0(\mainTimer.clkCont_17__N_52[13] ), 
    .F1(\mainTimer.clkCont_17__N_52[14] ), .COUT1(\mainTimer.n1395 ), 
    .COUT0(\mainTimer.n3307 ));
  mainTimer_SLICE_3 \mainTimer.SLICE_3 ( .D1(\mainTimer.n3304 ), 
    .B1(\mainTimer.clkCont[12] ), .D0(\mainTimer.n1391 ), 
    .B0(\mainTimer.clkCont[11] ), .CIN0(\mainTimer.n1391 ), 
    .CIN1(\mainTimer.n3304 ), .F0(\mainTimer.clkCont_17__N_52[11] ), 
    .F1(\mainTimer.clkCont_17__N_52[12] ), .COUT1(\mainTimer.n1393 ), 
    .COUT0(\mainTimer.n3304 ));
  mainTimer_SLICE_4 \mainTimer.SLICE_4 ( .D1(\mainTimer.n3301 ), 
    .B1(\mainTimer.clkCont[10] ), .D0(\mainTimer.n1389 ), 
    .B0(\mainTimer.clkCont[9] ), .CIN0(\mainTimer.n1389 ), 
    .CIN1(\mainTimer.n3301 ), .F0(\mainTimer.clkCont_17__N_52[9] ), 
    .F1(\mainTimer.clkCont_17__N_52[10] ), .COUT1(\mainTimer.n1391 ), 
    .COUT0(\mainTimer.n3301 ));
  mainTimer_SLICE_5 \mainTimer.SLICE_5 ( .D1(\mainTimer.n3298 ), 
    .B1(\mainTimer.clkCont[8] ), .D0(\mainTimer.n1387 ), 
    .B0(\mainTimer.clkCont[7] ), .CIN0(\mainTimer.n1387 ), 
    .CIN1(\mainTimer.n3298 ), .F0(\mainTimer.clkCont_17__N_52[7] ), 
    .F1(\mainTimer.clkCont_17__N_52[8] ), .COUT1(\mainTimer.n1389 ), 
    .COUT0(\mainTimer.n3298 ));
  mainTimer_SLICE_6 \mainTimer.SLICE_6 ( .D1(\mainTimer.n3295 ), 
    .B1(\mainTimer.clkCont[6] ), .D0(\mainTimer.n1385 ), 
    .B0(\mainTimer.clkCont[5] ), .CIN0(\mainTimer.n1385 ), 
    .CIN1(\mainTimer.n3295 ), .F0(\mainTimer.clkCont_17__N_52[5] ), 
    .F1(\mainTimer.clkCont_17__N_52[6] ), .COUT1(\mainTimer.n1387 ), 
    .COUT0(\mainTimer.n3295 ));
  mainTimer_SLICE_7 \mainTimer.SLICE_7 ( .D1(\mainTimer.n3292 ), 
    .B1(\mainTimer.clkCont[4] ), .D0(\mainTimer.n1383 ), 
    .B0(\mainTimer.clkCont[3] ), .CIN0(\mainTimer.n1383 ), 
    .CIN1(\mainTimer.n3292 ), .F0(\mainTimer.clkCont_17__N_52[3] ), 
    .F1(\mainTimer.clkCont_17__N_52[4] ), .COUT1(\mainTimer.n1385 ), 
    .COUT0(\mainTimer.n3292 ));
  mainTimer_SLICE_8 \mainTimer.SLICE_8 ( .D1(\mainTimer.n3289 ), 
    .B1(\mainTimer.clkCont[2] ), .D0(\mainTimer.n1381 ), 
    .B0(\mainTimer.clkCont[1] ), .CIN0(\mainTimer.n1381 ), 
    .CIN1(\mainTimer.n3289 ), .F0(\mainTimer.clkCont_17__N_52[1] ), 
    .F1(\mainTimer.clkCont_17__N_52[2] ), .COUT1(\mainTimer.n1383 ), 
    .COUT0(\mainTimer.n3289 ));
  mainTimer_SLICE_9 \mainTimer.SLICE_9 ( .D1(\mainTimer.n3202 ), .C1(VCC_net), 
    .B1(\mainTimer.clkCont[0] ), .CIN1(\mainTimer.n3202 ), 
    .F1(\mainTimer.clkCont_17__N_52[0] ), .COUT1(\mainTimer.n1381 ), 
    .COUT0(\mainTimer.n3202 ));
  STATE_OUT_SLICE_10 \STATE_OUT.SLICE_10 ( .D1(\STATE_OUT.n3169 ), 
    .B1(\j[12] ), .D0(\STATE_OUT.n1358 ), .B0(\j[11] ), 
    .CIN0(\STATE_OUT.n1358 ), .CIN1(\STATE_OUT.n3169 ), 
    .F0(\waiting_N_152[11] ), .F1(\waiting_N_152[12] ), 
    .COUT1(\STATE_OUT.n1360 ), .COUT0(\STATE_OUT.n3169 ));
  STATE_OUT_SLICE_11 \STATE_OUT.SLICE_11 ( .D1(\STATE_OUT.n3166 ), 
    .B1(\j[10] ), .D0(\STATE_OUT.n1356 ), .B0(\j[9] ), 
    .CIN0(\STATE_OUT.n1356 ), .CIN1(\STATE_OUT.n3166 ), 
    .F0(\waiting_N_152[9] ), .F1(\waiting_N_152[10] ), 
    .COUT1(\STATE_OUT.n1358 ), .COUT0(\STATE_OUT.n3166 ));
  STATE_OUT_SLICE_12 \STATE_OUT.SLICE_12 ( .D1(\STATE_OUT.n3163 ), .B1(\j[8] ), 
    .D0(\STATE_OUT.n1354 ), .B0(\j[7] ), .CIN0(\STATE_OUT.n1354 ), 
    .CIN1(\STATE_OUT.n3163 ), .F0(\waiting_N_152[7] ), .F1(\waiting_N_152[8] ), 
    .COUT1(\STATE_OUT.n1356 ), .COUT0(\STATE_OUT.n3163 ));
  STATE_OUT_SLICE_13 \STATE_OUT.SLICE_13 ( .D1(\STATE_OUT.n3175 ), 
    .B1(\j[16] ), .D0(\STATE_OUT.n1362 ), .B0(\j[15] ), 
    .CIN0(\STATE_OUT.n1362 ), .CIN1(\STATE_OUT.n3175 ), 
    .F0(\waiting_N_152[15] ), .F1(\waiting_N_152[16] ), 
    .COUT1(\STATE_OUT.n1364 ), .COUT0(\STATE_OUT.n3175 ));
  STATE_OUT_SLICE_14 \STATE_OUT.SLICE_14 ( .D1(\STATE_OUT.n3196 ), 
    .B1(\j[30] ), .D0(\STATE_OUT.n1376 ), .B0(\j[29] ), 
    .CIN0(\STATE_OUT.n1376 ), .CIN1(\STATE_OUT.n3196 ), 
    .F0(\waiting_N_152[29] ), .F1(\waiting_N_152[30] ), 
    .COUT1(\STATE_OUT.n1378 ), .COUT0(\STATE_OUT.n3196 ));
  STATE_OUT_SLICE_15 \STATE_OUT.SLICE_15 ( .D1(\STATE_OUT.n3160 ), .B1(\j[6] ), 
    .D0(\STATE_OUT.n1352 ), .B0(\j[5] ), .CIN0(\STATE_OUT.n1352 ), 
    .CIN1(\STATE_OUT.n3160 ), .F0(\waiting_N_152[5] ), .F1(\waiting_N_152[6] ), 
    .COUT1(\STATE_OUT.n1354 ), .COUT0(\STATE_OUT.n3160 ));
  STATE_OUT_SLICE_16 \STATE_OUT.SLICE_16 ( .D1(\STATE_OUT.n3157 ), .B1(\j[4] ), 
    .D0(\STATE_OUT.n1350 ), .B0(\j[3] ), .CIN0(\STATE_OUT.n1350 ), 
    .CIN1(\STATE_OUT.n3157 ), .F0(\waiting_N_152[3] ), .F1(\waiting_N_152[4] ), 
    .COUT1(\STATE_OUT.n1352 ), .COUT0(\STATE_OUT.n3157 ));
  STATE_OUT_SLICE_17 \STATE_OUT.SLICE_17 ( .DI0(\STATE_OUT.waiting_N_152[1] ), 
    .D1(\STATE_OUT.n3154 ), .B1(\j[2] ), .D0(\STATE_OUT.n1348 ), 
    .B0(\STATE_OUT.j[1]_2 ), .CE(\STATE_OUT.waiting_N_147 ), 
    .LSR(\STATE_OUT.n193 ), .CLK(SERCLK_OUT_c), .CIN0(\STATE_OUT.n1348 ), 
    .CIN1(\STATE_OUT.n3154 ), .Q0(\STATE_OUT.j[1]_2 ), 
    .F0(\STATE_OUT.waiting_N_152[1] ), .F1(\waiting_N_152[2] ), 
    .COUT1(\STATE_OUT.n1350 ), .COUT0(\STATE_OUT.n3154 ));
  STATE_OUT_SLICE_18 \STATE_OUT.SLICE_18 ( .D1(\STATE_OUT.n3172 ), 
    .B1(\j[14] ), .D0(\STATE_OUT.n1360 ), .B0(\j[13] ), 
    .CIN0(\STATE_OUT.n1360 ), .CIN1(\STATE_OUT.n3172 ), 
    .F0(\waiting_N_152[13] ), .F1(\waiting_N_152[14] ), 
    .COUT1(\STATE_OUT.n1362 ), .COUT0(\STATE_OUT.n3172 ));
  STATE_OUT_SLICE_19 \STATE_OUT.SLICE_19 ( .DI1(\STATE_OUT.waiting_N_152[0] ), 
    .D1(\STATE_OUT.n3151 ), .C1(VCC_net), .B1(\STATE_OUT.j[0]_2 ), 
    .CE(\STATE_OUT.waiting_N_147 ), .LSR(\STATE_OUT.n193 ), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.n3151 ), .Q1(\STATE_OUT.j[0]_2 ), 
    .F1(\STATE_OUT.waiting_N_152[0] ), .COUT1(\STATE_OUT.n1348 ), 
    .COUT0(\STATE_OUT.n3151 ));
  STATE_OUT_SLICE_20 \STATE_OUT.SLICE_20 ( .D1(\STATE_OUT.n3187 ), 
    .B1(\j[24] ), .D0(\STATE_OUT.n1370 ), .B0(\j[23] ), 
    .CIN0(\STATE_OUT.n1370 ), .CIN1(\STATE_OUT.n3187 ), 
    .F0(\waiting_N_152[23] ), .F1(\waiting_N_152[24] ), 
    .COUT1(\STATE_OUT.n1372 ), .COUT0(\STATE_OUT.n3187 ));
  STATE_OUT_SLICE_21 \STATE_OUT.SLICE_21 ( .D1(\STATE_OUT.n3184 ), 
    .B1(\j[22] ), .D0(\STATE_OUT.n1368 ), .B0(\j[21] ), 
    .CIN0(\STATE_OUT.n1368 ), .CIN1(\STATE_OUT.n3184 ), 
    .F0(\waiting_N_152[21] ), .F1(\waiting_N_152[22] ), 
    .COUT1(\STATE_OUT.n1370 ), .COUT0(\STATE_OUT.n3184 ));
  STATE_OUT_SLICE_22 \STATE_OUT.SLICE_22 ( .D1(\STATE_OUT.n3181 ), 
    .B1(\j[20] ), .D0(\STATE_OUT.n1366 ), .B0(\j[19] ), 
    .CIN0(\STATE_OUT.n1366 ), .CIN1(\STATE_OUT.n3181 ), 
    .F0(\waiting_N_152[19] ), .F1(\waiting_N_152[20] ), 
    .COUT1(\STATE_OUT.n1368 ), .COUT0(\STATE_OUT.n3181 ));
  STATE_OUT_SLICE_23 \STATE_OUT.SLICE_23 ( .D1(\STATE_OUT.n3178 ), 
    .B1(\j[18] ), .D0(\STATE_OUT.n1364 ), .B0(\j[17] ), 
    .CIN0(\STATE_OUT.n1364 ), .CIN1(\STATE_OUT.n3178 ), 
    .F0(\waiting_N_152[17] ), .F1(\waiting_N_152[18] ), 
    .COUT1(\STATE_OUT.n1366 ), .COUT0(\STATE_OUT.n3178 ));
  STATE_OUT_SLICE_24 \STATE_OUT.SLICE_24 ( .D1(\STATE_OUT.n3199 ), 
    .D0(\STATE_OUT.n1378 ), .B0(\j[31] ), .CIN0(\STATE_OUT.n1378 ), 
    .CIN1(\STATE_OUT.n3199 ), .F0(\waiting_N_152[31] ), 
    .COUT0(\STATE_OUT.n3199 ));
  STATE_OUT_SLICE_25 \STATE_OUT.SLICE_25 ( .D1(\STATE_OUT.n3193 ), 
    .B1(\j[28] ), .D0(\STATE_OUT.n1374 ), .B0(\j[27] ), 
    .CIN0(\STATE_OUT.n1374 ), .CIN1(\STATE_OUT.n3193 ), 
    .F0(\waiting_N_152[27] ), .F1(\waiting_N_152[28] ), 
    .COUT1(\STATE_OUT.n1376 ), .COUT0(\STATE_OUT.n3193 ));
  STATE_OUT_SLICE_26 \STATE_OUT.SLICE_26 ( .D1(\STATE_OUT.n3190 ), 
    .B1(\j[26] ), .D0(\STATE_OUT.n1372 ), .B0(\j[25] ), 
    .CIN0(\STATE_OUT.n1372 ), .CIN1(\STATE_OUT.n3190 ), 
    .F0(\waiting_N_152[25] ), .F1(\waiting_N_152[26] ), 
    .COUT1(\STATE_OUT.n1374 ), .COUT0(\STATE_OUT.n3190 ));
  STATE_OUT_serial_SLICE_27 \STATE_OUT.serial.SLICE_27 ( 
    .D1(\STATE_OUT.serial.n3256 ), .B1(\STATE_OUT.serial.j[16] ), 
    .D0(\STATE_OUT.serial.n1329 ), .B0(\STATE_OUT.serial.j[15] ), 
    .CIN0(\STATE_OUT.serial.n1329 ), .CIN1(\STATE_OUT.serial.n3256 ), 
    .F0(n151), .F1(n150), .COUT1(\STATE_OUT.serial.n1331 ), 
    .COUT0(\STATE_OUT.serial.n3256 ));
  STATE_OUT_serial_SLICE_28 \STATE_OUT.serial.SLICE_28 ( 
    .D1(\STATE_OUT.serial.n3241 ), .B1(\STATE_OUT.serial.j[6] ), 
    .D0(\STATE_OUT.serial.n1319 ), .B0(\STATE_OUT.serial.j[5] ), 
    .CIN0(\STATE_OUT.serial.n1319 ), .CIN1(\STATE_OUT.serial.n3241 ), 
    .F0(n161), .F1(n160), .COUT1(\STATE_OUT.serial.n1321 ), 
    .COUT0(\STATE_OUT.serial.n3241 ));
  STATE_OUT_serial_SLICE_29 \STATE_OUT.serial.SLICE_29 ( 
    .D1(\STATE_OUT.serial.n3247 ), .B1(\STATE_OUT.serial.j[10] ), 
    .D0(\STATE_OUT.serial.n1323 ), .B0(\STATE_OUT.serial.j[9] ), 
    .CIN0(\STATE_OUT.serial.n1323 ), .CIN1(\STATE_OUT.serial.n3247 ), 
    .F0(n157), .F1(n156), .COUT1(\STATE_OUT.serial.n1325 ), 
    .COUT0(\STATE_OUT.serial.n3247 ));
  STATE_OUT_serial_SLICE_30 \STATE_OUT.serial.SLICE_30 ( 
    .D1(\STATE_OUT.serial.n3238 ), .B1(\STATE_OUT.serial.j[4] ), 
    .D0(\STATE_OUT.serial.n1317 ), .B0(\STATE_OUT.serial.j[3] ), 
    .CIN0(\STATE_OUT.serial.n1317 ), .CIN1(\STATE_OUT.serial.n3238 ), 
    .F0(n163), .F1(n162), .COUT1(\STATE_OUT.serial.n1319 ), 
    .COUT0(\STATE_OUT.serial.n3238 ));
  STATE_OUT_serial_SLICE_31 \STATE_OUT.serial.SLICE_31 ( 
    .D1(\STATE_OUT.serial.n3280 ), .D0(\STATE_OUT.serial.n1345 ), 
    .B0(\STATE_OUT.serial.j[31] ), .CIN0(\STATE_OUT.serial.n1345 ), 
    .CIN1(\STATE_OUT.serial.n3280 ), .F0(n135), 
    .COUT0(\STATE_OUT.serial.n3280 ));
  STATE_OUT_serial_SLICE_32 \STATE_OUT.serial.SLICE_32 ( 
    .D1(\STATE_OUT.serial.n3277 ), .B1(\STATE_OUT.serial.j[30] ), 
    .D0(\STATE_OUT.serial.n1343 ), .B0(\STATE_OUT.serial.j[29] ), 
    .CIN0(\STATE_OUT.serial.n1343 ), .CIN1(\STATE_OUT.serial.n3277 ), 
    .F0(n137), .F1(n136), .COUT1(\STATE_OUT.serial.n1345 ), 
    .COUT0(\STATE_OUT.serial.n3277 ));
  STATE_OUT_serial_SLICE_33 \STATE_OUT.serial.SLICE_33 ( 
    .DI0(\STATE_OUT.serial.n167[1] ), .D1(\STATE_OUT.serial.n3235 ), 
    .B1(\STATE_OUT.serial.j[2] ), .D0(\STATE_OUT.serial.n1315 ), 
    .B0(\STATE_OUT.serial.j[1] ), .LSR(n174), .CLK(SERCLK_OUT_c), 
    .CIN0(\STATE_OUT.serial.n1315 ), .CIN1(\STATE_OUT.serial.n3235 ), 
    .Q0(\STATE_OUT.serial.j[1] ), .F0(\STATE_OUT.serial.n167[1] ), .F1(n164), 
    .COUT1(\STATE_OUT.serial.n1317 ), .COUT0(\STATE_OUT.serial.n3235 ));
  STATE_OUT_serial_SLICE_34 \STATE_OUT.serial.SLICE_34 ( 
    .D1(\STATE_OUT.serial.n3274 ), .B1(\STATE_OUT.serial.j[28] ), 
    .D0(\STATE_OUT.serial.n1341 ), .B0(\STATE_OUT.serial.j[27] ), 
    .CIN0(\STATE_OUT.serial.n1341 ), .CIN1(\STATE_OUT.serial.n3274 ), 
    .F0(n139), .F1(n138), .COUT1(\STATE_OUT.serial.n1343 ), 
    .COUT0(\STATE_OUT.serial.n3274 ));
  STATE_OUT_serial_SLICE_35 \STATE_OUT.serial.SLICE_35 ( 
    .D1(\STATE_OUT.serial.n3253 ), .B1(\STATE_OUT.serial.j[14] ), 
    .D0(\STATE_OUT.serial.n1327 ), .B0(\STATE_OUT.serial.j[13] ), 
    .CIN0(\STATE_OUT.serial.n1327 ), .CIN1(\STATE_OUT.serial.n3253 ), 
    .F0(n153), .F1(n152), .COUT1(\STATE_OUT.serial.n1329 ), 
    .COUT0(\STATE_OUT.serial.n3253 ));
  STATE_OUT_serial_SLICE_36 \STATE_OUT.serial.SLICE_36 ( 
    .D1(\STATE_OUT.serial.n3244 ), .B1(\STATE_OUT.serial.j[8] ), 
    .D0(\STATE_OUT.serial.n1321 ), .B0(\STATE_OUT.serial.j[7] ), 
    .CIN0(\STATE_OUT.serial.n1321 ), .CIN1(\STATE_OUT.serial.n3244 ), 
    .F0(n159), .F1(n158), .COUT1(\STATE_OUT.serial.n1323 ), 
    .COUT0(\STATE_OUT.serial.n3244 ));
  STATE_OUT_serial_SLICE_37 \STATE_OUT.serial.SLICE_37 ( 
    .D1(\STATE_OUT.serial.n3271 ), .B1(\STATE_OUT.serial.j[26] ), 
    .D0(\STATE_OUT.serial.n1339 ), .B0(\STATE_OUT.serial.j[25] ), 
    .CIN0(\STATE_OUT.serial.n1339 ), .CIN1(\STATE_OUT.serial.n3271 ), 
    .F0(n141), .F1(n140), .COUT1(\STATE_OUT.serial.n1341 ), 
    .COUT0(\STATE_OUT.serial.n3271 ));
  STATE_OUT_serial_SLICE_38 \STATE_OUT.serial.SLICE_38 ( 
    .D1(\STATE_OUT.serial.n3268 ), .B1(\STATE_OUT.serial.j[24] ), 
    .D0(\STATE_OUT.serial.n1337 ), .B0(\STATE_OUT.serial.j[23] ), 
    .CIN0(\STATE_OUT.serial.n1337 ), .CIN1(\STATE_OUT.serial.n3268 ), 
    .F0(n143), .F1(n142), .COUT1(\STATE_OUT.serial.n1339 ), 
    .COUT0(\STATE_OUT.serial.n3268 ));
  STATE_OUT_serial_SLICE_39 \STATE_OUT.serial.SLICE_39 ( 
    .D1(\STATE_OUT.serial.n3250 ), .B1(\STATE_OUT.serial.j[12] ), 
    .D0(\STATE_OUT.serial.n1325 ), .B0(\STATE_OUT.serial.j[11] ), 
    .CIN0(\STATE_OUT.serial.n1325 ), .CIN1(\STATE_OUT.serial.n3250 ), 
    .F0(n155), .F1(n154), .COUT1(\STATE_OUT.serial.n1327 ), 
    .COUT0(\STATE_OUT.serial.n3250 ));
  STATE_OUT_serial_SLICE_40 \STATE_OUT.serial.SLICE_40 ( 
    .D1(\STATE_OUT.serial.n3265 ), .B1(\STATE_OUT.serial.j[22] ), 
    .D0(\STATE_OUT.serial.n1335 ), .B0(\STATE_OUT.serial.j[21] ), 
    .CIN0(\STATE_OUT.serial.n1335 ), .CIN1(\STATE_OUT.serial.n3265 ), 
    .F0(n145), .F1(n144), .COUT1(\STATE_OUT.serial.n1337 ), 
    .COUT0(\STATE_OUT.serial.n3265 ));
  STATE_OUT_serial_SLICE_41 \STATE_OUT.serial.SLICE_41 ( 
    .D1(\STATE_OUT.serial.n3262 ), .B1(\STATE_OUT.serial.j[20] ), 
    .D0(\STATE_OUT.serial.n1333 ), .B0(\STATE_OUT.serial.j[19] ), 
    .CIN0(\STATE_OUT.serial.n1333 ), .CIN1(\STATE_OUT.serial.n3262 ), 
    .F0(n147), .F1(n146), .COUT1(\STATE_OUT.serial.n1335 ), 
    .COUT0(\STATE_OUT.serial.n3262 ));
  STATE_OUT_serial_SLICE_42 \STATE_OUT.serial.SLICE_42 ( 
    .DI1(\STATE_OUT.serial.n167[0] ), .D1(\STATE_OUT.serial.n3232 ), 
    .C1(VCC_net), .B1(\STATE_OUT.serial.j[0] ), .LSR(n174), .CLK(SERCLK_OUT_c), 
    .CIN1(\STATE_OUT.serial.n3232 ), .Q1(\STATE_OUT.serial.j[0] ), 
    .F1(\STATE_OUT.serial.n167[0] ), .COUT1(\STATE_OUT.serial.n1315 ), 
    .COUT0(\STATE_OUT.serial.n3232 ));
  STATE_OUT_serial_SLICE_43 \STATE_OUT.serial.SLICE_43 ( 
    .D1(\STATE_OUT.serial.n3259 ), .B1(\STATE_OUT.serial.j[18] ), 
    .D0(\STATE_OUT.serial.n1331 ), .B0(\STATE_OUT.serial.j[17] ), 
    .CIN0(\STATE_OUT.serial.n1331 ), .CIN1(\STATE_OUT.serial.n3259 ), 
    .F0(n149), .F1(n148), .COUT1(\STATE_OUT.serial.n1333 ), 
    .COUT0(\STATE_OUT.serial.n3259 ));
  SLICE_44 SLICE_44( .DI1(\Snext[0]$n1 ), .DI0(\Snext[1]$n0 ), .D1(\Snext[0] ), 
    .B1(\Snext_1__N_1[0] ), .A1(Snext_1__N_3), .C0(\Snext[1] ), 
    .B0(Snext_1__N_3), .A0(\Snext_1__N_1[1] ), .LSR(RESET_IN_c), 
    .CLK(SERCLK_OUT_c), .Q0(\Sreg[1] ), .Q1(\Sreg[0] ), .F0(\Snext[1]$n0 ), 
    .F1(\Snext[0]$n1 ));
  keyboard_SLICE_46 \keyboard.SLICE_46 ( .DI1(\keyboard.nextState[0]$n3 ), 
    .DI0(\keyboard.nextState[1]$n2 ), .D1(\keyboard.nextState[0] ), 
    .C1(\keyboard.counter[1] ), .B1(\keyboard.n397 ), 
    .A1(\keyboard.counter[0] ), .D0(\keyboard.n6 ), .C0(\state[0] ), 
    .CLK(SERCLK_OUT_c), .Q0(\state[1] ), .Q1(\state[0] ), 
    .F0(\keyboard.nextState[1]$n2 ), .F1(\keyboard.nextState[0]$n3 ));
  keyboard_SLICE_47 \keyboard.SLICE_47 ( .DI1(\keyboard.n13[1] ), 
    .DI0(\keyboard.n1 ), .C1(\keyboard.counter[1] ), 
    .A1(\keyboard.counter[0] ), .B0(\keyboard.counter[0] ), .CLK(KB_RECV_c), 
    .Q0(\keyboard.counter[0] ), .Q1(\keyboard.counter[1] ), .F0(\keyboard.n1 ), 
    .F1(\keyboard.n13[1] ));
  mainTimer_SLICE_51 \mainTimer.SLICE_51 ( 
    .DI1(\mainTimer.clkCont_17__N_31[16] ), 
    .DI0(\mainTimer.clkCont_17__N_31[17] ), .D1(TIME_OUT), 
    .B1(\mainTimer.clkCont_17__N_52[16] ), 
    .C0(\mainTimer.clkCont_17__N_52[17] ), .A0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_49 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[17] ), .Q1(\mainTimer.clkCont[16] ), 
    .F0(\mainTimer.clkCont_17__N_31[17] ), 
    .F1(\mainTimer.clkCont_17__N_31[16] ));
  mainTimer_SLICE_53 \mainTimer.SLICE_53 ( 
    .DI1(\mainTimer.clkCont_17__N_31[14] ), 
    .DI0(\mainTimer.clkCont_17__N_31[15] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_52[14] ), 
    .D0(\mainTimer.clkCont_17__N_52[15] ), .C0(TIME_OUT), 
    .LSR(\mainTimer.clkCont_17__N_49 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[15] ), .Q1(\mainTimer.clkCont[14] ), 
    .F0(\mainTimer.clkCont_17__N_31[15] ), 
    .F1(\mainTimer.clkCont_17__N_31[14] ));
  mainTimer_SLICE_55 \mainTimer.SLICE_55 ( 
    .DI1(\mainTimer.clkCont_17__N_31[12] ), 
    .DI0(\mainTimer.clkCont_17__N_31[13] ), .D1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_52[12] ), .C0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_52[13] ), .LSR(\mainTimer.clkCont_17__N_49 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[13] ), 
    .Q1(\mainTimer.clkCont[12] ), .F0(\mainTimer.clkCont_17__N_31[13] ), 
    .F1(\mainTimer.clkCont_17__N_31[12] ));
  mainTimer_SLICE_57 \mainTimer.SLICE_57 ( 
    .DI1(\mainTimer.clkCont_17__N_31[10] ), 
    .DI0(\mainTimer.clkCont_17__N_31[11] ), 
    .C1(\mainTimer.clkCont_17__N_52[10] ), .B1(TIME_OUT), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_52[11] ), .LSR(\mainTimer.clkCont_17__N_49 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[11] ), 
    .Q1(\mainTimer.clkCont[10] ), .F0(\mainTimer.clkCont_17__N_31[11] ), 
    .F1(\mainTimer.clkCont_17__N_31[10] ));
  mainTimer_SLICE_59 \mainTimer.SLICE_59 ( 
    .DI1(\mainTimer.clkCont_17__N_31[8] ), 
    .DI0(\mainTimer.clkCont_17__N_31[9] ), .B1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_52[8] ), .C0(TIME_OUT), 
    .B0(\mainTimer.clkCont_17__N_52[9] ), .LSR(\mainTimer.clkCont_17__N_49 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[9] ), 
    .Q1(\mainTimer.clkCont[8] ), .F0(\mainTimer.clkCont_17__N_31[9] ), 
    .F1(\mainTimer.clkCont_17__N_31[8] ));
  mainTimer_SLICE_61 \mainTimer.SLICE_61 ( 
    .DI1(\mainTimer.clkCont_17__N_31[6] ), 
    .DI0(\mainTimer.clkCont_17__N_31[7] ), .C1(TIME_OUT), 
    .A1(\mainTimer.clkCont_17__N_52[6] ), .D0(\mainTimer.clkCont_17__N_52[7] ), 
    .B0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_49 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[7] ), .Q1(\mainTimer.clkCont[6] ), 
    .F0(\mainTimer.clkCont_17__N_31[7] ), .F1(\mainTimer.clkCont_17__N_31[6] ));
  mainTimer_SLICE_63 \mainTimer.SLICE_63 ( 
    .DI1(\mainTimer.clkCont_17__N_31[4] ), 
    .DI0(\mainTimer.clkCont_17__N_31[5] ), .D1(TIME_OUT), 
    .C1(\mainTimer.clkCont_17__N_52[4] ), .D0(\mainTimer.clkCont_17__N_52[5] ), 
    .A0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_49 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[5] ), .Q1(\mainTimer.clkCont[4] ), 
    .F0(\mainTimer.clkCont_17__N_31[5] ), .F1(\mainTimer.clkCont_17__N_31[4] ));
  mainTimer_SLICE_65 \mainTimer.SLICE_65 ( 
    .DI1(\mainTimer.clkCont_17__N_31[2] ), 
    .DI0(\mainTimer.clkCont_17__N_31[3] ), .D1(TIME_OUT), 
    .C1(\mainTimer.clkCont_17__N_52[2] ), .C0(TIME_OUT), 
    .A0(\mainTimer.clkCont_17__N_52[3] ), .LSR(\mainTimer.clkCont_17__N_49 ), 
    .CLK(SERCLK_OUT_c), .Q0(\mainTimer.clkCont[3] ), 
    .Q1(\mainTimer.clkCont[2] ), .F0(\mainTimer.clkCont_17__N_31[3] ), 
    .F1(\mainTimer.clkCont_17__N_31[2] ));
  mainTimer_SLICE_67 \mainTimer.SLICE_67 ( 
    .DI1(\mainTimer.clkCont_17__N_31[0] ), 
    .DI0(\mainTimer.clkCont_17__N_31[1] ), .D1(TIME_OUT), 
    .C1(\mainTimer.clkCont_17__N_52[0] ), .D0(\mainTimer.clkCont_17__N_52[1] ), 
    .A0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_49 ), .CLK(SERCLK_OUT_c), 
    .Q0(\mainTimer.clkCont[1] ), .Q1(\mainTimer.clkCont[0] ), 
    .F0(\mainTimer.clkCont_17__N_31[1] ), .F1(\mainTimer.clkCont_17__N_31[0] ));
  SLICE_69 SLICE_69( .DI1(n512), .DI0(n510), .D1(\waiting_N_152[6] ), 
    .C1(waiting_N_151), .B1(waiting), .A1(\j[6] ), .D0(waiting_N_151), 
    .C0(\waiting_N_152[7] ), .B0(waiting), .A0(\j[7] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[7] ), .Q1(\j[6] ), .F0(n510), .F1(n512));
  SLICE_70 SLICE_70( .DI1(n506), .DI0(n508), .D1(waiting), .C1(waiting_N_151), 
    .B1(\waiting_N_152[9] ), .A1(\j[9] ), .D0(waiting_N_151), 
    .C0(\waiting_N_152[8] ), .B0(waiting), .A0(\j[8] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[8] ), .Q1(\j[9] ), .F0(n508), .F1(n506));
  SLICE_71 SLICE_71( .DI1(n514), .DI0(n516), .D1(\waiting_N_152[5] ), 
    .C1(waiting_N_151), .B1(waiting), .A1(\j[5] ), .D0(waiting_N_151), 
    .C0(\j[4] ), .B0(\waiting_N_152[4] ), .A0(waiting), .CLK(SERCLK_OUT_c), 
    .Q0(\j[4] ), .Q1(\j[5] ), .F0(n516), .F1(n514));
  SLICE_75 SLICE_75( .DI1(n522), .DI0(n518), .D1(waiting), .C1(waiting_N_151), 
    .B1(\waiting_N_152[2] ), .A1(\j[2] ), .D0(waiting_N_151), 
    .C0(\waiting_N_152[3] ), .B0(waiting), .A0(\j[3] ), .CLK(SERCLK_OUT_c), 
    .Q0(\j[3] ), .Q1(\j[2] ), .F0(n518), .F1(n522));
  SLICE_76 SLICE_76( .DI1(n555), .DI0(n520), .D1(waiting_N_151), .C1(\j[11] ), 
    .B1(\waiting_N_152[11] ), .A1(waiting), .D0(\j[10] ), .C0(waiting_N_151), 
    .B0(waiting), .A0(\waiting_N_152[10] ), .CLK(SERCLK_OUT_c), .Q0(\j[10] ), 
    .Q1(\j[11] ), .F0(n520), .F1(n555));
  STATE_OUT_SLICE_78 \STATE_OUT.SLICE_78 ( .DI1(\STATE_OUT.n21[1] ), 
    .DI0(\STATE_OUT.n21[0] ), .D1(\STATE_OUT.cont[1] ), 
    .C1(\STATE_OUT.cont[0] ), .B0(\STATE_OUT.cont[0] ), 
    .LSR(\STATE_OUT.waiting_N_147 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[0] ), .Q1(\STATE_OUT.cont[1] ), 
    .F0(\STATE_OUT.n21[0] ), .F1(\STATE_OUT.n21[1] ));
  SLICE_80 SLICE_80( .DI1(n559), .DI0(n557), .D1(waiting_N_151), .C1(\j[13] ), 
    .B1(\waiting_N_152[13] ), .A1(waiting), .D0(waiting), .C0(\j[12] ), 
    .B0(\waiting_N_152[12] ), .A0(waiting_N_151), .CLK(SERCLK_OUT_c), 
    .Q0(\j[12] ), .Q1(\j[13] ), .F0(n557), .F1(n559));
  SLICE_82 SLICE_82( .DI1(n563), .DI0(n561), .D1(\j[15] ), 
    .C1(\waiting_N_152[15] ), .B1(waiting_N_151), .A1(waiting), .D0(waiting), 
    .C0(\j[14] ), .B0(\waiting_N_152[14] ), .A0(waiting_N_151), 
    .CLK(SERCLK_OUT_c), .Q0(\j[14] ), .Q1(\j[15] ), .F0(n561), .F1(n563));
  SLICE_84 SLICE_84( .DI1(n567), .DI0(n565), .D1(waiting), 
    .C1(\waiting_N_152[17] ), .B1(waiting_N_151), .A1(\j[17] ), .D0(\j[16] ), 
    .C0(\waiting_N_152[16] ), .B0(waiting), .A0(waiting_N_151), 
    .CLK(SERCLK_OUT_c), .Q0(\j[16] ), .Q1(\j[17] ), .F0(n565), .F1(n567));
  SLICE_86 SLICE_86( .DI1(n571), .DI0(n569), .D1(\waiting_N_152[19] ), 
    .C1(\j[19] ), .B1(waiting_N_151), .A1(waiting), .D0(\j[18] ), 
    .C0(\waiting_N_152[18] ), .B0(waiting), .A0(waiting_N_151), 
    .CLK(SERCLK_OUT_c), .Q0(\j[18] ), .Q1(\j[19] ), .F0(n569), .F1(n571));
  SLICE_88 SLICE_88( .DI1(n593), .DI0(n595), .D1(waiting), .C1(\j[30] ), 
    .B1(waiting_N_151), .A1(\waiting_N_152[30] ), .D0(\j[31] ), 
    .C0(waiting_N_151), .B0(\waiting_N_152[31] ), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q0(\j[31] ), .Q1(\j[30] ), .F0(n595), .F1(n593));
  SLICE_90 SLICE_90( .DI1(n589), .DI0(n591), .D1(\j[28] ), 
    .C1(\waiting_N_152[28] ), .B1(waiting), .A1(waiting_N_151), 
    .D0(waiting_N_151), .C0(waiting), .B0(\j[29] ), .A0(\waiting_N_152[29] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[29] ), .Q1(\j[28] ), .F0(n591), .F1(n589));
  SLICE_92 SLICE_92( .DI1(n585), .DI0(n587), .D1(waiting), 
    .C1(\waiting_N_152[26] ), .B1(waiting_N_151), .A1(\j[26] ), .D0(\j[27] ), 
    .C0(\waiting_N_152[27] ), .B0(waiting), .A0(waiting_N_151), 
    .CLK(SERCLK_OUT_c), .Q0(\j[27] ), .Q1(\j[26] ), .F0(n587), .F1(n585));
  SLICE_94 SLICE_94( .DI1(n581), .DI0(n583), .D1(\j[24] ), 
    .C1(\waiting_N_152[24] ), .B1(waiting), .A1(waiting_N_151), 
    .D0(\waiting_N_152[25] ), .C0(\j[25] ), .B0(waiting_N_151), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q0(\j[25] ), .Q1(\j[24] ), .F0(n583), .F1(n581));
  SLICE_96 SLICE_96( .DI1(n577), .DI0(n579), .D1(waiting_N_151), .C1(\j[22] ), 
    .B1(\waiting_N_152[22] ), .A1(waiting), .D0(waiting), .C0(\j[23] ), 
    .B0(\waiting_N_152[23] ), .A0(waiting_N_151), .CLK(SERCLK_OUT_c), 
    .Q0(\j[23] ), .Q1(\j[22] ), .F0(n579), .F1(n577));
  SLICE_98 SLICE_98( .DI1(n573), .DI0(n575), .D1(\j[20] ), 
    .C1(\waiting_N_152[20] ), .B1(waiting_N_151), .A1(waiting), .D0(waiting), 
    .C0(waiting_N_151), .B0(\j[21] ), .A0(\waiting_N_152[21] ), 
    .CLK(SERCLK_OUT_c), .Q0(\j[21] ), .Q1(\j[20] ), .F0(n575), .F1(n573));
  STATE_OUT_SLICE_101 \STATE_OUT.SLICE_101 ( .DI1(\STATE_OUT.n21[3] ), 
    .DI0(\STATE_OUT.n21[2] ), .D1(\STATE_OUT.cont[3] ), 
    .C1(\STATE_OUT.cont[1] ), .B1(\STATE_OUT.cont[2] ), 
    .A1(\STATE_OUT.cont[0] ), .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[2] ), .A0(\STATE_OUT.cont[1] ), 
    .LSR(\STATE_OUT.waiting_N_147 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.cont[2] ), .Q1(\STATE_OUT.cont[3] ), 
    .F0(\STATE_OUT.n21[2] ), .F1(\STATE_OUT.n21[3] ));
  SLICE_105 SLICE_105( .DI0(\Sreg[1].sig_000.FeedThruLUT ), .C0(\Sreg[1] ), 
    .CE(\STATE_OUT.n173 ), .LSR(\STATE_OUT.serial.n503 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[3]_2 ), 
    .F0(\Sreg[1].sig_000.FeedThruLUT ));
  SLICE_106 SLICE_106( .DI1(n534), .DI0(n535), .D1(n174), .A1(n145), .B0(n146), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[20] ), 
    .Q1(\STATE_OUT.serial.j[21] ), .F0(n535), .F1(n534));
  SLICE_108 SLICE_108( .DI0(\SENSOR2_IN_c.sig_001.FeedThruLUT ), 
    .D0(SENSOR2_IN_c), .CE(\STATE_OUT.n173 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[0]_2 ), 
    .F0(\SENSOR2_IN_c.sig_001.FeedThruLUT ));
  SLICE_109 SLICE_109( .DI0(\SENSOR1_IN_c.sig_002.FeedThruLUT ), 
    .A0(SENSOR1_IN_c), .CE(\STATE_OUT.n173 ), .CLK(SERCLK_OUT_c), 
    .Q0(\STATE_OUT.serial.temp_data_out[1]_2 ), 
    .F0(\SENSOR1_IN_c.sig_002.FeedThruLUT ));
  SLICE_110 SLICE_110( .DI1(n552), .DI0(n553), .C1(n163), .B1(n174), .C0(n164), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[2] ), 
    .Q1(\STATE_OUT.serial.j[3] ), .F0(n553), .F1(n552));
  SLICE_112 SLICE_112( .DI1(n550), .DI0(n551), .D1(n174), .B1(n161), .C0(n162), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[4] ), 
    .Q1(\STATE_OUT.serial.j[5] ), .F0(n551), .F1(n550));
  SLICE_114 SLICE_114( .DI1(n548), .DI0(n549), .D1(n174), .C1(n159), .D0(n160), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[6] ), 
    .Q1(\STATE_OUT.serial.j[7] ), .F0(n549), .F1(n548));
  SLICE_116 SLICE_116( .DI1(n546), .DI0(n547), .D1(n157), .A1(n174), .D0(n174), 
    .A0(n158), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[8] ), 
    .Q1(\STATE_OUT.serial.j[9] ), .F0(n547), .F1(n546));
  SLICE_118 SLICE_118( .DI1(n544), .DI0(n545), .D1(n174), .B1(n155), .D0(n156), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[10] ), 
    .Q1(\STATE_OUT.serial.j[11] ), .F0(n545), .F1(n544));
  SLICE_120 SLICE_120( .DI1(n542), .DI0(n543), .D1(n174), .C1(n153), .C0(n174), 
    .A0(n154), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[12] ), 
    .Q1(\STATE_OUT.serial.j[13] ), .F0(n543), .F1(n542));
  SLICE_122 SLICE_122( .DI1(n532), .DI0(n533), .B1(n143), .A1(n174), .B0(n174), 
    .A0(n144), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[22] ), 
    .Q1(\STATE_OUT.serial.j[23] ), .F0(n533), .F1(n532));
  SLICE_124 SLICE_124( .DI1(n530), .DI0(n531), .C1(n174), .B1(n141), .D0(n174), 
    .B0(n142), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[24] ), 
    .Q1(\STATE_OUT.serial.j[25] ), .F0(n531), .F1(n530));
  SLICE_126 SLICE_126( .DI1(n528), .DI0(n529), .D1(n139), .A1(n174), .B0(n174), 
    .A0(n140), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[26] ), 
    .Q1(\STATE_OUT.serial.j[27] ), .F0(n529), .F1(n528));
  SLICE_128 SLICE_128( .DI1(n526), .DI0(n527), .C1(n137), .A1(n174), .D0(n174), 
    .B0(n138), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[28] ), 
    .Q1(\STATE_OUT.serial.j[29] ), .F0(n527), .F1(n526));
  SLICE_130 SLICE_130( .DI1(n524), .DI0(n525), .D1(init), .C1(n135), .B0(n174), 
    .A0(n136), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[30] ), 
    .Q1(\STATE_OUT.serial.j[31] ), .F0(n525), .F1(n524));
  SLICE_132 SLICE_132( .DI1(n540), .DI0(n541), .D1(n174), .A1(n151), .C0(n152), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[14] ), 
    .Q1(\STATE_OUT.serial.j[15] ), .F0(n541), .F1(n540));
  SLICE_134 SLICE_134( .DI1(n538), .DI0(n539), .D1(n174), .C1(n149), .C0(n174), 
    .B0(n150), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[16] ), 
    .Q1(\STATE_OUT.serial.j[17] ), .F0(n539), .F1(n538));
  SLICE_136 SLICE_136( .DI1(n536), .DI0(n537), .D1(n147), .B1(n174), .D0(n148), 
    .A0(n174), .CLK(SERCLK_OUT_c), .Q0(\STATE_OUT.serial.j[18] ), 
    .Q1(\STATE_OUT.serial.j[19] ), .F0(n537), .F1(n536));
  keyboard_SLICE_140 \keyboard.SLICE_140 ( .C1(\keyboard.n6 ), .B1(\state[0] ), 
    .D0(\keyboard.counter[0] ), .C0(\keyboard.nextState[1] ), 
    .B0(\keyboard.counter[1] ), .A0(\state[1] ), .F0(\keyboard.n6 ), 
    .F1(\keyboard.nextState[1] ));
  SLICE_142 SLICE_142( .D1(\Sreg[1] ), .C1(\Snext_1__N_12[0] ), 
    .B1(\KEY_STATUS[1] ), .A1(n2700), .D0(n2307), .C0(\PREV_KEY[0] ), 
    .B0(\PREV_KEY[1] ), .A0(\KEY_STATUS[1] ), .F0(\Snext_1__N_12[0] ), 
    .F1(\Snext_1__N_1[0] ));
  SLICE_143 SLICE_143( .D1(TIME_OUT), .C1(\Sreg[0] ), .A1(\KEY_STATUS[1] ), 
    .D0(\Sreg[0] ), .C0(\KEY_STATUS[1] ), .B0(TIME_OUT), .A0(\Sreg[1] ), 
    .F0(n2700), .F1(n2314));
  SLICE_144 SLICE_144( .D1(SENSOR2_IN_c), .C1(TIMER_EN_N_22), .B1(\Sreg[0] ), 
    .A1(\KEY_STATUS[1] ), .D0(\KEY_STATUS[1] ), .C0(TIMER_EN_N_26), .B0(n3), 
    .A0(SENSOR1_IN_c), .F0(TIMER_EN_N_22), .F1(n1));
  SLICE_146 SLICE_146( .D1(\actualKey[0][1] ), .C1(n2122), 
    .B1(\actualKey[2][1] ), .A1(\state[0] ), .D0(\keyboard.actualKey[0][0] ), 
    .C0(\keyboard.actualKey[3][0] ), .B0(\keyboard.actualKey[1][0] ), 
    .A0(\keyboard.actualKey[2][0] ), .F0(n2122), .F1(n12));
  keyboard_SLICE_147 \keyboard.SLICE_147 ( .D1(KB_IN_c_1), 
    .C1(\keyboard.n1766 ), .A1(\actualKey[2][1] ), .D0(\keyboard.counter[1] ), 
    .C0(\state[1] ), .B0(\state[0] ), .A0(\keyboard.counter[0] ), 
    .F0(\keyboard.n1766 ), .F1(\actualKey[2][1] ));
  SLICE_148 SLICE_148( .D1(\state[0] ), .C1(\KEY_STATUS[1] ), .A1(\state[1] ), 
    .D0(\state[1] ), .C0(n12), .B0(\actualKey[3][1] ), .A0(\actualKey[1][1] ), 
    .F0(\KEY_STATUS[1] ), .F1(TIMER_EN_N_26));
  keyboard_SLICE_149 \keyboard.SLICE_149 ( .D1(KB_IN_c_1), 
    .C1(\keyboard.n1049 ), .A1(\actualKey[1][1] ), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\keyboard.counter[1] ), .A0(\state[1] ), 
    .F0(\keyboard.n1049 ), .F1(\actualKey[1][1] ));
  SLICE_151 SLICE_151( .D1(\PREV_KEY[0] ), .C1(PREV_KEY_1__N_7), 
    .B1(\Sreg[1] ), .A1(\Sreg[0] ), .D0(\Sreg[1] ), .C0(n1), .B0(TIME_OUT), 
    .A0(n1924), .F0(PREV_KEY_1__N_7), .F1(\PREV_KEY[0] ));
  SLICE_153 SLICE_153( .D1(\Sreg[1] ), .C1(n2316), .B1(\Sreg[0] ), .A1(n2314), 
    .D0(TIMER_EN_N_26), .C0(SENSOR2_IN_c), .B0(\KEY_STATUS[1] ), 
    .A0(SENSOR1_IN_c), .F0(n2316), .F1(\Snext_1__N_1[1] ));
  SLICE_154 SLICE_154( .D1(TIMER_EN), .C1(TIMER_EN_N_17), .B1(n393), .A1(n3), 
    .D0(\Sreg[0] ), .C0(\Sreg[1] ), .B0(n987), .A0(TIMER_EN_N_22), 
    .F0(TIMER_EN_N_17), .F1(TIMER_EN));
  mainTimer_SLICE_155 \mainTimer.SLICE_155 ( .C0(TIMER_EN), 
    .F0(\mainTimer.clkCont_17__N_49 ));
  keyboard_SLICE_157 \keyboard.SLICE_157 ( .C1(\keyboard.actualKey[2][0] ), 
    .B1(\keyboard.n1766 ), .A1(KB_IN_c_0), .D0(\keyboard.n1049 ), 
    .C0(\keyboard.actualKey[1][0] ), .B0(KB_IN_c_0), 
    .F0(\keyboard.actualKey[1][0] ), .F1(\keyboard.actualKey[2][0] ));
  SLICE_160 SLICE_160( .D1(\Sreg[0] ), .B1(\Sreg[1] ), .C0(\Sreg[0] ), 
    .A0(\Sreg[1] ), .F0(\PREV_KEY_1__N_5[1] ), .F1(SIREN_OUT_c));
  SLICE_161 SLICE_161( .D1(\PREV_KEY[1] ), .C1(n1926), 
    .B1(\PREV_KEY_1__N_5[1] ), .A1(n492), .D0(TIME_OUT), .C0(\Sreg[0] ), 
    .B0(\KEY_STATUS[1] ), .A0(\Sreg[1] ), .F0(n1926), .F1(\PREV_KEY[1] ));
  SLICE_162 SLICE_162( .C0(\KEY_STATUS[1] ), .B0(\Sreg[0] ), .F0(n1924));
  SLICE_164 SLICE_164( .D1(TIME_OUT), .C1(n393), .B1(\state[0] ), 
    .A1(\state[1] ), .D0(\Sreg[0] ), .C0(\Sreg[1] ), .F0(n393), 
    .F1(Snext_1__N_3));
  SLICE_165 SLICE_165( .C0(\Snext_1__N_1[0] ), .B0(\Snext[0] ), 
    .A0(Snext_1__N_3), .F0(\Snext[0] ));
  SLICE_166 SLICE_166( .DI1(\mainTimer.n2882 ), .D1(\mainTimer.n24 ), 
    .C1(\mainTimer.clkCont[8] ), .B1(\mainTimer.clkCont[5] ), 
    .A1(\mainTimer.n20 ), .D0(\state[1] ), .C0(\KEY_STATUS[1] ), 
    .B0(\state[0] ), .A0(TIME_OUT), .LSR(\mainTimer.clkCont_17__N_49 ), 
    .CLK(SERCLK_OUT_c), .Q1(TIME_OUT), .F0(n987), .F1(\mainTimer.n2882 ));
  keyboard_SLICE_168 \keyboard.SLICE_168 ( .C1(\keyboard.n1763 ), 
    .B1(KB_IN_c_0), .A1(\keyboard.actualKey[0][0] ), .D0(\state[0] ), 
    .C0(\keyboard.counter[0] ), .B0(\keyboard.counter[1] ), .A0(\state[1] ), 
    .F0(\keyboard.n1763 ), .F1(\keyboard.actualKey[0][0] ));
  keyboard_SLICE_172 \keyboard.SLICE_172 ( .D1(\keyboard.actualKey[3][0] ), 
    .C1(\keyboard.n1765 ), .A1(KB_IN_c_0), .D0(\keyboard.counter[0] ), 
    .C0(\keyboard.counter[1] ), .B0(\state[1] ), .A0(\state[0] ), 
    .F0(\keyboard.n1765 ), .F1(\keyboard.actualKey[3][0] ));
  keyboard_SLICE_174 \keyboard.SLICE_174 ( .D1(\keyboard.counter[0] ), 
    .C1(\keyboard.n397 ), .B1(\keyboard.nextState[0] ), 
    .A1(\keyboard.counter[1] ), .C0(\state[0] ), .A0(\state[1] ), 
    .F0(\keyboard.n397 ), .F1(\keyboard.nextState[0] ));
  mainTimer_SLICE_176 \mainTimer.SLICE_176 ( .D1(\mainTimer.clkCont[3] ), 
    .C1(\mainTimer.n2118 ), .B1(\mainTimer.clkCont[1] ), 
    .A1(\mainTimer.n2108 ), .D0(\mainTimer.clkCont[15] ), 
    .C0(\mainTimer.clkCont[9] ), .B0(\mainTimer.clkCont[13] ), .A0(TIME_OUT), 
    .F0(\mainTimer.n2118 ), .F1(\mainTimer.n20 ));
  mainTimer_SLICE_178 \mainTimer.SLICE_178 ( .C1(\mainTimer.clkCont[10] ), 
    .A1(\mainTimer.clkCont[16] ), .D0(\mainTimer.clkCont[12] ), 
    .C0(\mainTimer.clkCont[4] ), .A0(\mainTimer.clkCont[7] ), 
    .F0(\mainTimer.n18 ), .F1(\mainTimer.n2108 ));
  mainTimer_SLICE_179 \mainTimer.SLICE_179 ( .D1(\mainTimer.clkCont[6] ), 
    .C1(\mainTimer.n21 ), .B1(\mainTimer.n18 ), .A1(\mainTimer.clkCont[0] ), 
    .D0(\mainTimer.clkCont[14] ), .C0(\mainTimer.clkCont[17] ), 
    .B0(\mainTimer.clkCont[2] ), .A0(\mainTimer.clkCont[11] ), 
    .F0(\mainTimer.n21 ), .F1(\mainTimer.n24 ));
  STATE_OUT_SLICE_180 \STATE_OUT.SLICE_180 ( .D1(\waiting_N_152[27] ), 
    .C1(\waiting_N_152[28] ), .B1(\waiting_N_152[9] ), .A1(\waiting_N_152[2] ), 
    .C0(\waiting_N_152[13] ), .B0(\waiting_N_152[4] ), .F0(\STATE_OUT.n32 ), 
    .F1(\STATE_OUT.n47 ));
  STATE_OUT_SLICE_181 \STATE_OUT.SLICE_181 ( .D1(\waiting_N_152[29] ), 
    .C1(\STATE_OUT.n46 ), .B1(\waiting_N_152[3] ), .A1(\STATE_OUT.n32 ), 
    .D0(\waiting_N_152[25] ), .C0(\waiting_N_152[17] ), 
    .B0(\waiting_N_152[20] ), .A0(\waiting_N_152[19] ), .F0(\STATE_OUT.n46 ), 
    .F1(\STATE_OUT.n52 ));
  STATE_OUT_SLICE_182 \STATE_OUT.SLICE_182 ( .D1(\STATE_OUT.n48 ), 
    .C1(\STATE_OUT.n50 ), .B1(\STATE_OUT.n47 ), .A1(\STATE_OUT.n49 ), 
    .D0(\waiting_N_152[10] ), .C0(\waiting_N_152[7] ), .B0(\waiting_N_152[8] ), 
    .A0(\waiting_N_152[30] ), .F0(\STATE_OUT.n50 ), .F1(\STATE_OUT.n56 ));
  STATE_OUT_SLICE_184 \STATE_OUT.SLICE_184 ( .D1(\waiting_N_152[22] ), 
    .C1(\STATE_OUT.n30 ), .B1(\waiting_N_152[6] ), .A1(\waiting_N_152[14] ), 
    .C0(\waiting_N_152[5] ), .B0(\waiting_N_152[21] ), .F0(\STATE_OUT.n30 ), 
    .F1(\STATE_OUT.n51 ));
  STATE_OUT_SLICE_186 \STATE_OUT.SLICE_186 ( .C1(waiting_N_151), .A1(waiting), 
    .D0(\STATE_OUT.n51 ), .C0(\STATE_OUT.n56 ), .B0(\waiting_N_152[31] ), 
    .A0(\STATE_OUT.n52 ), .F0(waiting_N_151), .F1(\STATE_OUT.n193 ));
  STATE_OUT_serial_SLICE_188 \STATE_OUT.serial.SLICE_188 ( 
    .D1(\STATE_OUT.serial.n49 ), .C1(\STATE_OUT.serial.n50 ), 
    .B1(\STATE_OUT.serial.n48 ), .A1(\STATE_OUT.serial.n47 ), .D0(n156), 
    .C0(n158), .B0(n159), .A0(n136), .F0(\STATE_OUT.serial.n50 ), 
    .F1(\STATE_OUT.serial.n56 ));
  STATE_OUT_serial_SLICE_190 \STATE_OUT.serial.SLICE_190 ( .D0(n153), 
    .C0(n162), .F0(\STATE_OUT.serial.n32 ));
  STATE_OUT_serial_SLICE_191 \STATE_OUT.serial.SLICE_191 ( 
    .D1(\STATE_OUT.serial.n32 ), .C1(\STATE_OUT.serial.n46 ), .B1(n163), 
    .A1(n137), .D0(n149), .C0(n141), .B0(n147), .A0(n146), 
    .F0(\STATE_OUT.serial.n46 ), .F1(\STATE_OUT.serial.n52 ));
  STATE_OUT_serial_SLICE_192 \STATE_OUT.serial.SLICE_192 ( .D1(n144), 
    .C1(\STATE_OUT.serial.n44 ), .B1(\STATE_OUT.serial.n52 ), .A1(n152), 
    .D0(n160), .B0(n161), .A0(n145), .F0(\STATE_OUT.serial.n44 ), 
    .F1(\STATE_OUT.serial.n55 ));
  STATE_OUT_serial_SLICE_194 \STATE_OUT.serial.SLICE_194 ( 
    .DI1(\STATE_OUT.serial.status_out_N_264 ), 
    .D1(\STATE_OUT.serial.temp_data_out[1]_2 ), .C1(\STATE_OUT.serial.n2694 ), 
    .B1(\STATE_OUT.serial.j[1] ), .A1(\STATE_OUT.serial.temp_data_out[0]_2 ), 
    .D0(\temp_data_out[2] ), .C0(\STATE_OUT.serial.j[1] ), 
    .B0(\STATE_OUT.serial.temp_data_out[3]_2 ), .A0(\STATE_OUT.serial.j[0] ), 
    .LSR(\STATE_OUT.n173 ), .CLK(SERCLK_OUT_c), .Q1(STATUS_OUT_c), 
    .F0(\STATE_OUT.serial.n2694 ), .F1(\STATE_OUT.serial.status_out_N_264 ));
  STATE_OUT_SLICE_196 \STATE_OUT.SLICE_196 ( .D0(\STATE_OUT.cont[0] ), 
    .C0(\STATE_OUT.cont[2] ), .B0(\STATE_OUT.cont[1] ), 
    .A0(\STATE_OUT.cont[3] ), .F0(\STATE_OUT.n2320 ));
  STATE_OUT_SLICE_197 \STATE_OUT.SLICE_197 ( .DI1(\STATE_OUT.n1790 ), 
    .D1(waiting), .C1(\STATE_OUT.n2320 ), .A1(waiting_N_151), .A0(waiting), 
    .CLK(SERCLK_OUT_c), .Q1(waiting), .F0(\STATE_OUT.waiting_N_147 ), 
    .F1(\STATE_OUT.n1790 ));
  keyboard_SLICE_198 \keyboard.SLICE_198 ( .D1(KB_IN_c_1), 
    .C1(\actualKey[3][1] ), .A1(\keyboard.n1765 ), .D0(\actualKey[0][1] ), 
    .C0(KB_IN_c_1), .A0(\keyboard.n1763 ), .F0(\actualKey[0][1] ), 
    .F1(\actualKey[3][1] ));
  SLICE_199 SLICE_199( .D0(\state[0] ), .B0(\state[1] ), .F0(n3));
  SLICE_202 SLICE_202( .D1(TIMER_EN_N_22), .C1(SENSOR2_IN_c), 
    .C0(TIMER_EN_N_26), .B0(SENSOR2_IN_c), .A0(SENSOR1_IN_c), .F0(n2307), 
    .F1(n492));
  STATE_OUT_serial_SLICE_204 \STATE_OUT.serial.SLICE_204 ( .D1(n148), 
    .C1(n142), .B1(n140), .A1(n143), .D0(n164), .C0(n139), .B0(n138), 
    .A0(n157), .F0(\STATE_OUT.serial.n47 ), .F1(\STATE_OUT.serial.n49 ));
  STATE_OUT_serial_SLICE_206 \STATE_OUT.serial.SLICE_206 ( .D0(n150), 
    .C0(n155), .B0(n151), .A0(n154), .F0(\STATE_OUT.serial.n48 ));
  STATE_OUT_serial_SLICE_207 \STATE_OUT.serial.SLICE_207 ( .D0(init), 
    .C0(\STATE_OUT.serial.n56 ), .B0(\STATE_OUT.serial.n55 ), .A0(n135), 
    .F0(n174));
  STATE_OUT_SLICE_209 \STATE_OUT.SLICE_209 ( .D0(\waiting_N_152[26] ), 
    .C0(\waiting_N_152[18] ), .B0(\waiting_N_152[24] ), 
    .A0(\waiting_N_152[23] ), .F0(\STATE_OUT.n49 ));
  SLICE_210 SLICE_210( .F0(VCC_net));
  STATE_OUT_SLICE_216 \STATE_OUT.SLICE_216 ( .D0(\waiting_N_152[12] ), 
    .C0(\waiting_N_152[11] ), .B0(\waiting_N_152[15] ), 
    .A0(\waiting_N_152[16] ), .F0(\STATE_OUT.n48 ));
  STATE_OUT_SLICE_217 \STATE_OUT.SLICE_217 ( 
    .DI1(\STATE_OUT.waiting_N_147$n4 ), .D1(waiting), .A0(init), 
    .CLK(SERCLK_OUT_c), .Q1(init), .F0(\STATE_OUT.n173 ), 
    .F1(\STATE_OUT.waiting_N_147$n4 ));
  STATE_OUT_serial_SLICE_219 \STATE_OUT.serial.SLICE_219 ( .DI1(n614), 
    .D1(\temp_data_out[2] ), .C1(\Sreg[0] ), .B1(init), .A1(\Sreg[1] ), 
    .C0(init), .B0(\Sreg[0] ), .CLK(SERCLK_OUT_c), .Q1(\temp_data_out[2] ), 
    .F0(\STATE_OUT.serial.n503 ), .F1(n614));
  SLICE_220 SLICE_220( .C0(\Snext_1__N_1[1] ), .B0(Snext_1__N_3), 
    .A0(\Snext[1] ), .F0(\Snext[1] ));
  OSCInst1 OSCInst1( .CLKLFPU(VCC_net), .CLKLFEN(VCC_net), 
    .CLKLF(SERCLK_OUT_c));
  STATE_OUT_serial_status_send \STATE_OUT.serial.status_send ( .DO0(init), 
    .OUTCLK(SERCLK_OUT_c), .PADDO(STATUS_SEND_c));
  STATUS_SEND STATUS_SEND_I( .PADDO(STATUS_SEND_c), .STATUS_SEND(STATUS_SEND));
  STATUS_OUT STATUS_OUT_I( .PADDO(STATUS_OUT_c), .STATUS_OUT(STATUS_OUT));
  SIREN_OUT SIREN_OUT_I( .PADDO(SIREN_OUT_c), .SIREN_OUT(SIREN_OUT));
  SERCLK_OUT SERCLK_OUT_I( .PADDO(SERCLK_OUT_c), .SERCLK_OUT(SERCLK_OUT));
  SENSOR1_IN SENSOR1_IN_I( .PADDI(SENSOR1_IN_c), .SENSOR1_IN(SENSOR1_IN));
  SENSOR2_IN SENSOR2_IN_I( .PADDI(SENSOR2_IN_c), .SENSOR2_IN(SENSOR2_IN));
  KB_IN_1_ \KB_IN[1]_I ( .PADDI(KB_IN_c_1), .KBIN1(KB_IN[1]));
  KB_IN_0_ \KB_IN[0]_I ( .PADDI(KB_IN_c_0), .KBIN0(KB_IN[0]));
  KB_RECV KB_RECV_I( .PADDI(KB_RECV_c), .KB_RECV(KB_RECV));
  RESET_IN RESET_IN_I( .PADDI(RESET_IN_c), .RESET_IN(RESET_IN));
endmodule

module mainTimer_SLICE_0 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module fa2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI0, CI1, output S0, S1, 
    CO0, CO1 );

  FA2 inst1( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .CI0(CI0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .CI1(CI1), .CO0(CO0), .CO1(CO1), .S0(S0), .S1(S1));
  defparam inst1.INIT0 = "0xc33c";
  defparam inst1.INIT1 = "0xc33c";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module mainTimer_SLICE_1 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_2 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_3 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_4 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_5 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_6 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_7 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_8 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \mainTimer/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module mainTimer_SLICE_9 ( input D1, C1, B1, CIN1, output F1, COUT1, COUT0 );
  wire   GNDI, VCCI;

  fa2 \mainTimer/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module STATE_OUT_SLICE_10 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_11 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_12 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_13 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_14 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_15 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_16 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_17 ( input DI0, D1, B1, D0, B0, CE, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i1 ( .D0(DI0_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module ffsre2 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module STATE_OUT_SLICE_18 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_19 ( input DI1, D1, C1, B1, CE, LSR, CLK, CIN1, output 
    Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  fa2 \STATE_OUT/add_7_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(VCCI), 
    .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), .S0(), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/j__i0 ( .D0(DI1_dly), .SP(CE_dly), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_SLICE_20 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_21 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_22 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_23 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_24 ( input D1, D0, B0, CIN0, CIN1, output F0, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_25 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_26 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, F1, 
    COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/add_7_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_27 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_17 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_28 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_7 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_29 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_11 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_30 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_5 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_31 ( input D1, D0, B0, CIN0, CIN1, output F0, 
    COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_33 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(), .CO0(COUT0), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_32 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_31 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_33 ( input DI0, D1, B1, D0, B0, LSR, CLK, CIN0, 
    CIN1, output Q0, F0, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_3 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/j__i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_34 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_29 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_35 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_15 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_36 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_9 ( .A0(GNDI), .B0(B0), .C0(GNDI), .D0(D0), 
    .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), .S0(F0), 
    .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_37 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_27 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_38 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_25 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_39 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_13 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_40 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_23 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_41 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_21 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_42 ( input DI1, D1, C1, B1, LSR, CLK, CIN1, 
    output Q1, F1, COUT1, COUT0 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, LSR_dly;

  fa2 \STATE_OUT/serial/add_6_add_5_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(VCCI), .A1(GNDI), .B1(B1), .C1(C1), .D1(D1), .CI0(VCCI), .CI1(CIN1), 
    .S0(), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => COUT1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_43 ( input D1, B1, D0, B0, CIN0, CIN1, output F0, 
    F1, COUT1, COUT0 );
  wire   GNDI;

  fa2 \STATE_OUT/serial/add_6_add_5_19 ( .A0(GNDI), .B0(B0), .C0(GNDI), 
    .D0(D0), .A1(GNDI), .B1(B1), .C1(GNDI), .D1(D1), .CI0(CIN0), .CI1(CIN1), 
    .S0(F0), .S1(F1), .CO0(COUT0), .CO1(COUT1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => COUT1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => COUT0) = (0:0:0,0:0:0);
    (CIN0 => COUT0) = (0:0:0,0:0:0);
    (CIN1 => COUT1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input DI1, DI0, D1, B1, A1, C0, B0, A0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 SLICE_44_K1( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40001 SLICE_44_K0( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 Sreg_i0( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 Sreg_i1( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  LUT4 #("0xDD88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40001 ( input A, B, C, D, output Z );

  LUT4 #("0xB8B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20002 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "RESET";
  defparam INST01.SRMODE = "ASYNC";
endmodule

module keyboard_SLICE_46 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, CLK, 
    output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40003 \keyboard.SLICE_46_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40004 \keyboard.SLICE_46_K0 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \keyboard/state_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/state_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40003 ( input A, B, C, D, output Z );

  LUT4 #("0x3320") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_47 ( input DI1, DI0, C1, A1, B0, CLK, output Q0, Q1, F0, 
    F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40005 \keyboard/i1083_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \keyboard/i183_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \keyboard/counter_153__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \keyboard/counter_153__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  LUT4 #("0x5A5A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  LUT4 #("0x3333") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_51 ( input DI1, DI0, D1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40007 \mainTimer/i857_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 \mainTimer/i855_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i16 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i17 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_53 ( input DI1, DI0, B1, A1, D0, C0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \mainTimer/i859_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 \mainTimer/i858_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i14 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i15 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_55 ( input DI1, DI0, D1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 \mainTimer/i861_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i860_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i12 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i13 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_57 ( input DI1, DI0, C1, B1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40013 \mainTimer/i863_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i862_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i10 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i11 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_59 ( input DI1, DI0, B1, A1, C0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 \mainTimer/i865_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 \mainTimer/i864_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i8 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i9 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_61 ( input DI1, DI0, C1, A1, D0, B0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40015 \mainTimer/i854_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 \mainTimer/i853_2_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_63 ( input DI1, DI0, D1, C1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i840_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i869_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i4 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i5 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_65 ( input DI1, DI0, D1, C1, C0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i847_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \mainTimer/i844_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module mainTimer_SLICE_67 ( input DI1, DI0, D1, C1, D0, A0, LSR, CLK, output 
    Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40017 \mainTimer/i829_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \mainTimer/i850_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/clkCont_i0 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre20002 \mainTimer/clkCont_i1 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module SLICE_69 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i385_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i383_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i6 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i7 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  LUT4 #("0x8B88") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  LUT4 #("0x88B8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_70 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i379_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i381_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  LUT4 #("0xAA0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_71 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40019 i387_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 i389_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_75 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40021 i395_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40020 i391_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i2 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i3 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_76 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i428_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 i393_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  LUT4 #("0xA0E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  LUT4 #("0xCE02") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_78 ( input DI1, DI0, D1, C1, B0, LSR, CLK, output Q0, 
    Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40025 \STATE_OUT/i1098_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \STATE_OUT/i1096_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/cont_152__i1 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_152__i0 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  LUT4 #("0x0FF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_80 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i432_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i430_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  LUT4 #("0xF044") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_82 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 i436_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i434_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  LUT4 #("0xBA10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_84 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 i440_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i438_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  LUT4 #("0xAA30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  LUT4 #("0xDC10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_86 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40030 i444_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i442_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_88 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40031 i466_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i468_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i30 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i31 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  LUT4 #("0xF022") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  LUT4 #("0xAE04") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_90 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i462_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i464_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i28 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i29 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  LUT4 #("0xDC10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  LUT4 #("0xC0CA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_92 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40028 i458_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i460_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i26 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i27 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_94 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40033 i454_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i456_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i24 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i25 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  LUT4 #("0xB1A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_96 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40023 i450_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 i452_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i22 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i23 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_98 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, B0, A0, CLK, output 
    Q0, Q1, F0, F1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  lut40027 i446_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i448_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/j__i20 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/j__i21 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  LUT4 #("0xCC0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_101 ( input DI1, DI0, D1, C1, B1, A1, D0, C0, A0, LSR, 
    CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40037 \STATE_OUT/i1112_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40038 \STATE_OUT/i1105_2_lut_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/cont_152__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/cont_152__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  LUT4 #("0x7F80") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  LUT4 #("0x5AF0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_105 ( input DI0, C0, CE, LSR, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40039 SLICE_105_K0( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre20040 \STATE_OUT/serial/temp_data_out_i0_i3 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  LUT4 #("0xF0F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module ffsre20040 ( input D0, SP, CK, LSR, output Q );

  FD1P3XZ INST01( .D(D0), .SP(SP), .CK(CK), .SR(LSR), .Q(Q));
  defparam INST01.REGSET = "SET";
  defparam INST01.SRMODE = "CE_OVER_LSR";
endmodule

module SLICE_106 ( input DI1, DI0, D1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 i407_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i408_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i21 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i20 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_108 ( input DI0, D0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40043 SLICE_108_K0( .A(GNDI), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i0 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  LUT4 #("0xFF00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_109 ( input DI0, A0, CE, CLK, output Q0, F0 );
  wire   GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40044 SLICE_109_K0( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i1 ( .D0(DI0_dly), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  LUT4 #("0xAAAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_110 ( input DI1, DI0, C1, B1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40045 i425_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i426_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i3 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i2 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  LUT4 #("0x3030") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40046 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_112 ( input DI1, DI0, D1, B1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40047 i423_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i424_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i5 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i4 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_114 ( input DI1, DI0, D1, C1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i421_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i422_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i7 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i6 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  LUT4 #("0x00F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_116 ( input DI1, DI0, D1, A1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i419_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i420_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i9 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i8 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  LUT4 #("0x5500") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  LUT4 #("0x00AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_118 ( input DI1, DI0, D1, B1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40047 i417_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i418_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i11 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i10 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_120 ( input DI1, DI0, D1, C1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i415_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i416_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i13 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i12 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  LUT4 #("0x0A0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_122 ( input DI1, DI0, B1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40053 i405_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i406_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i23 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i22 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  LUT4 #("0x4444") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  LUT4 #("0x2222") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_124 ( input DI1, DI0, C1, B1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40055 i403_2_lut( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i404_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i25 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i24 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  LUT4 #("0x00CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_126 ( input DI1, DI0, D1, A1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40050 i401_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i402_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i27 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i26 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_128 ( input DI1, DI0, C1, A1, D0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40057 i399_2_lut( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i400_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i29 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i28 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  LUT4 #("0x5050") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_130 ( input DI1, DI0, D1, C1, B0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40058 i397_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40054 i398_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i31 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i30 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  LUT4 #("0xF000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_132 ( input DI1, DI0, D1, A1, C0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40041 i413_2_lut( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i414_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i15 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i14 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module SLICE_134 ( input DI1, DI0, D1, C1, C0, B0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40048 i411_2_lut( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 i412_2_lut( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i17 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i16 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  LUT4 #("0x0C0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_136 ( input DI1, DI0, D1, B1, D0, A0, CLK, output Q0, Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly;

  lut40060 i409_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40049 i410_2_lut( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  ffsre2 \STATE_OUT/serial/j__i19 ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ffsre2 \STATE_OUT/serial/j__i18 ( .D0(DI0_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  LUT4 #("0x3300") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_140 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40061 \keyboard/i1_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \keyboard/i12_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  LUT4 #("0xBAD8") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_142 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40063 n2700_bdd_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 mux_23_i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  LUT4 #("0xAAB1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  LUT4 #("0xAB01") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_143 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 i1815_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 \Sreg[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  LUT4 #("0xAFAA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  LUT4 #("0xF588") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_144 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40067 Mux_85_i1_3_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  LUT4 #("0x11D1") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  LUT4 #("0x1000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_146 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40069 i5_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 \keyboard/i1664_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  LUT4 #("0xFFDF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40070 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_147 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40071 \keyboard/i519_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 \keyboard/i2_3_lut_4_lut_adj_40 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  LUT4 #("0xAFA0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_148 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 KEY_STATUS_1__I_0_i3_3_lut_3_lut( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  LUT4 #("0xAFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_149 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40071 \keyboard/i517_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40075 \keyboard/i895_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40076 i493_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 Mux_85_i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  LUT4 #("0x2F20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  LUT4 #("0x11F0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_153 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40078 Sreg_1__I_0_3_Mux_1_i3_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40079 i1812_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  LUT4 #("0xAAC0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  LUT4 #("0xC8CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40080 i497_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40081 Sreg_1__I_0_i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  LUT4 #("0x1F10") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40081 ( input A, B, C, D, output Z );

  LUT4 #("0xFA30") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_155 ( input C0, output F0 );
  wire   GNDI;

  lut40082 \mainTimer/EN_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  LUT4 #("0x0F0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_157 ( input C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40083 \keyboard/i503_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \keyboard/i501_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  LUT4 #("0xF0CC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_160 ( input D1, B1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40085 i848_2_lut( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i876_2_lut( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  LUT4 #("0xCC00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40086 i1_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40087 i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40086 ( input A, B, C, D, output Z );

  LUT4 #("0xF888") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40087 ( input A, B, C, D, output Z );

  LUT4 #("0xFEFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_162 ( input C0, B0, output F0 );
  wire   GNDI;

  lut40088 i1_2_lut_adj_43( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40088 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_164 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40089 i2_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40090 i266_2_lut( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  LUT4 #("0xFFF4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  LUT4 #("0xFF0F") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_165 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40091 i495_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  LUT4 #("0xE4E4") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_166 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, LSR, CLK, 
    output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40092 \mainTimer/i12_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40093 i833_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  ffsre20002 \mainTimer/state ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40092 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40093 ( input A, B, C, D, output Z );

  LUT4 #("0xAAEA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_168 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40094 \keyboard/i499_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40095 \keyboard/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40094 ( input A, B, C, D, output Z );

  LUT4 #("0xACAC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40095 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFD") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_172 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40096 \keyboard/i505_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40097 \keyboard/i2_3_lut_4_lut_adj_41 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40096 ( input A, B, C, D, output Z );

  LUT4 #("0xFA0A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40097 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_174 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40098 \keyboard/i507_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40099 \keyboard/i270_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40098 ( input A, B, C, D, output Z );

  LUT4 #("0x0E0C") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40099 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_176 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40100 \mainTimer/i7_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40101 \mainTimer/i1660_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  LUT4 #("0x0400") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40101 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_178 ( input C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40102 \mainTimer/i1650_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \mainTimer/i5_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  LUT4 #("0xFAFA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  LUT4 #("0x000A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module mainTimer_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40104 \mainTimer/i11_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40105 \mainTimer/i8_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  LUT4 #("0x8000") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_180 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40106 \STATE_OUT/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40088 \STATE_OUT/i3_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_181 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40107 \STATE_OUT/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40108 \STATE_OUT/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40107 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40108 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_182 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40109 \STATE_OUT/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40110 \STATE_OUT/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40109 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40110 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_184 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40111 \STATE_OUT/i22_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40112 \STATE_OUT/i1_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40111 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40112 ( input A, B, C, D, output Z );

  LUT4 #("0xFCFC") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_186 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40057 \STATE_OUT/i156_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 \STATE_OUT/i871_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40113 ( input A, B, C, D, output Z );

  LUT4 #("0x3332") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_188 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40114 \STATE_OUT/serial/i27_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40074 \STATE_OUT/serial/i21_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_190 ( input D0, C0, output F0 );
  wire   GNDI;

  lut40004 \STATE_OUT/serial/i3_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_191 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40115 \STATE_OUT/serial/i23_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40116 \STATE_OUT/serial/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40115 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40116 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_192 ( input D1, C1, B1, A1, D0, B0, A0, output 
    F0, F1 );
  wire   GNDI;

  lut40117 \STATE_OUT/serial/i26_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40118 \STATE_OUT/serial/i15_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40117 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40118 ( input A, B, C, D, output Z );

  LUT4 #("0xFFEE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_194 ( input DI1, D1, C1, B1, A1, D0, C0, B0, A0, 
    LSR, CLK, output Q1, F0, F1 );
  wire   VCCI, DI1_dly, CLK_dly, LSR_dly;

  lut40119 \STATE_OUT/serial/n2694_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40120 \STATE_OUT/serial/j[0]_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  ffsre2 \STATE_OUT/serial/status_out ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40119 ( input A, B, C, D, output Z );

  LUT4 #("0xF2C2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40120 ( input A, B, C, D, output Z );

  LUT4 #("0xDA8A") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_196 ( input D0, C0, B0, A0, output F0 );

  lut40121 \STATE_OUT/i1809_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFB") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_197 ( input DI1, D1, C1, A1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40122 \STATE_OUT/i12_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \STATE_OUT/waiting_I_34_1_lut ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  ffsre2 \STATE_OUT/waiting_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), 
    .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40122 ( input A, B, C, D, output Z );

  LUT4 #("0xF0AA") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40123 ( input A, B, C, D, output Z );

  LUT4 #("0x5555") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module keyboard_SLICE_198 ( input D1, C1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40124 \keyboard/i521_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40125 \keyboard/i515_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40124 ( input A, B, C, D, output Z );

  LUT4 #("0xF5A0") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40125 ( input A, B, C, D, output Z );

  LUT4 #("0xFA50") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_199 ( input D0, B0, output F0 );
  wire   GNDI;

  lut40016 i1_2_lut( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_202 ( input D1, C1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40126 i1_2_lut_adj_42( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40127 i1811_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40126 ( input A, B, C, D, output Z );

  LUT4 #("0x0F00") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module lut40127 ( input A, B, C, D, output Z );

  LUT4 #("0xBFBF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, 
    output F0, F1 );

  lut40107 \STATE_OUT/serial/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40128 \STATE_OUT/serial/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40128 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFE") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_206 ( input D0, C0, B0, A0, output F0 );

  lut40108 \STATE_OUT/serial/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_serial_SLICE_207 ( input D0, C0, B0, A0, output F0 );

  lut40129 \STATE_OUT.serial.i137_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  LUT4 #("0x54FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_209 ( input D0, C0, B0, A0, output F0 );

  lut40108 \STATE_OUT/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_210 ( output F0 );
  wire   GNDI;

  lut40130 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module lut40130 ( input A, B, C, D, output Z );

  LUT4 #("0xFFFF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_SLICE_216 ( input D0, C0, B0, A0, output F0 );

  lut40075 \STATE_OUT/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module STATE_OUT_SLICE_217 ( input DI1, D1, A0, CLK, output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40131 \STATE_OUT.SLICE_217_K1 ( .A(GNDI), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40123 \STATE_OUT/i136_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), 
    .Z(F0));
  ffsre2 \STATE_OUT/init_c ( .D0(DI1_dly), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), 
    .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  LUT4 #("0x00FF") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module STATE_OUT_serial_SLICE_219 ( input DI1, D1, C1, B1, A1, C0, B0, CLK, 
    output Q1, F0, F1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly;

  lut40132 i487_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 \STATE_OUT/serial/i376_2_lut_2_lut ( .A(GNDI), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  ffsre2 \STATE_OUT/serial/temp_data_out_i0_i2 ( .D0(DI1_dly), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
  endspecify

endmodule

module lut40132 ( input A, B, C, D, output Z );

  LUT4 #("0xEC20") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module SLICE_220 ( input C0, B0, A0, output F0 );
  wire   GNDI;

  lut40133 i513_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  LUT4 #("0xE2E2") INST10( .A(A), .B(B), .C(C), .D(D), .Z(Z));
endmodule

module OSCInst1 ( input CLKLFPU, CLKLFEN, output CLKLF );
  wire   GNDI;

  LSOSC_CORE_B OSCInst1( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(GNDI), 
    .TRIM8(GNDI), .TRIM7(GNDI), .TRIM6(GNDI), .TRIM5(GNDI), .TRIM4(GNDI), 
    .TRIM3(GNDI), .TRIM2(GNDI), .TRIM1(GNDI), .TRIM0(GNDI), .CLKLF(CLKLF));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
  endspecify

endmodule

module LSOSC_CORE_B ( input CLKLFPU, CLKLFEN, TRIM9, TRIM8, TRIM7, TRIM6, 
    TRIM5, TRIM4, TRIM3, TRIM2, TRIM1, TRIM0, output CLKLF );

  LSOSC_CORE INST10( .CLKLFPU(CLKLFPU), .CLKLFEN(CLKLFEN), .TRIM9(TRIM9), 
    .TRIM8(TRIM8), .TRIM7(TRIM7), .TRIM6(TRIM6), .TRIM5(TRIM5), .TRIM4(TRIM4), 
    .TRIM3(TRIM3), .TRIM2(TRIM2), .TRIM1(TRIM1), .TRIM0(TRIM0), .CLKLF(CLKLF));
  defparam INST10.FABRIC_TRIME = "DISABLE";
endmodule

module STATE_OUT_serial_status_send ( input DO0, OUTCLK, output PADDO );
  wire   GNDI, VCCI, DO0_dly, OUTCLK_dly;

  IOL_B_B \STATE_OUT/serial/status_send ( .PADDI(GNDI), .DO1(GNDI), 
    .DO0(DO0_dly), .CE(VCCI), .IOLTO(GNDI), .HOLD(GNDI), .INCLK(GNDI), 
    .OUTCLK(OUTCLK_dly), .PADDO(PADDO), .PADDT(), .DI1(), .DI0());
  gnd DRIVEGND( .PWR0(GNDI));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (OUTCLK => PADDO) = (0:0:0,0:0:0);
    $setuphold (posedge OUTCLK, DO0, 0:0:0, 0:0:0,,,, OUTCLK_dly, DO0_dly);
  endspecify

endmodule

module IOL_B_B ( input PADDI, DO1, DO0, CE, IOLTO, HOLD, INCLK, OUTCLK, 
    output PADDO, PADDT, DI1, DI0 );

  IOL_B INST10( .PADDI(PADDI), .DO1(DO1), .DO0(DO0), .CE(CE), .IOLTO(IOLTO), 
    .HOLD(HOLD), .INCLK(INCLK), .OUTCLK(OUTCLK), .PADDO(PADDO), .PADDT(PADDT), 
    .DI1(DI1), .DI0(DI0));
  defparam INST10.LATCHIN = "LATCH_REG";
  defparam INST10.DDROUT = "NO";
endmodule

module STATUS_SEND ( input PADDO, output STATUS_SEND );
  wire   VCCI;

  BB_B_B \STATUS_SEND_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), 
    .B(STATUS_SEND));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_SEND) = (0:0:0,0:0:0);
  endspecify

endmodule

module BB_B_B ( input T_N, I, output O, inout B );

  BB_B INST10( .T_N(T_N), .I(I), .O(O), .B(B));
endmodule

module STATUS_OUT ( input PADDO, output STATUS_OUT );
  wire   VCCI;

  BB_B_B \STATUS_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(STATUS_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => STATUS_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SIREN_OUT ( input PADDO, output SIREN_OUT );
  wire   VCCI;

  BB_B_B \SIREN_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SIREN_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SIREN_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SERCLK_OUT ( input PADDO, output SERCLK_OUT );
  wire   VCCI;

  BB_B_B \SERCLK_OUT_pad.bb_inst ( .T_N(VCCI), .I(PADDO), .O(), .B(SERCLK_OUT));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (PADDO => SERCLK_OUT) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR1_IN ( output PADDI, input SENSOR1_IN );
  wire   GNDI;

  BB_B_B \SENSOR1_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR1_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR1_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module SENSOR2_IN ( output PADDI, input SENSOR2_IN );
  wire   GNDI;

  BB_B_B \SENSOR2_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), 
    .B(SENSOR2_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (SENSOR2_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_1_ ( output PADDI, input KBIN1 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[1].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN1 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_IN_0_ ( output PADDI, input KBIN0 );
  wire   GNDI;

  BB_B_B \KB_IN_pad[0].bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KBIN0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KBIN0 => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module KB_RECV ( output PADDI, input KB_RECV );
  wire   GNDI;

  BB_B_B \KB_RECV_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(KB_RECV));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (KB_RECV => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule

module RESET_IN ( output PADDI, input RESET_IN );
  wire   GNDI;

  BB_B_B \RESET_IN_pad.bb_inst ( .T_N(GNDI), .I(GNDI), .O(PADDI), .B(RESET_IN));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (RESET_IN => PADDI) = (0:0:0,0:0:0);
  endspecify

endmodule
